[
  {
    "objectID": "speak/index.html",
    "href": "speak/index.html",
    "title": "Have David Wynn Speak",
    "section": "",
    "text": "I will make a mark on your audience through a combination of wit and wisdom, so that they come away knowing that the experience was worthwhile.\nWhether via podcast or on stage, with slides or alone on a stool, I am equally comfortable with audiences from developers to the C-Suite.\nFrom conveying a complex topic clearly, to cutting through the noise to the one big idea, to having an interesting free-form discussion across a wide range of topics, I’m here to bring a unique take on what needs discussing."
  },
  {
    "objectID": "speak/index.html#promise",
    "href": "speak/index.html#promise",
    "title": "Have David Wynn Speak",
    "section": "",
    "text": "I will make a mark on your audience through a combination of wit and wisdom, so that they come away knowing that the experience was worthwhile.\nWhether via podcast or on stage, with slides or alone on a stool, I am equally comfortable with audiences from developers to the C-Suite.\nFrom conveying a complex topic clearly, to cutting through the noise to the one big idea, to having an interesting free-form discussion across a wide range of topics, I’m here to bring a unique take on what needs discussing."
  },
  {
    "objectID": "speak/index.html#proof",
    "href": "speak/index.html#proof",
    "title": "Have David Wynn Speak",
    "section": "Proof",
    "text": "Proof\n\nWork Experience\n\nCompanies\n\n\n\n\n\n\n\n\n\n\nGoogle\nSumoLogic\nIntapp\nEdge Delta\nUPS\n\n\n\n\n\nAreas\n\n\n\n\n\n\n\n\n\nSales Engineering\nPartner Engineering\nSolution Engineering\nForecasting\n\n\n\n\n\n\nRecordings\nAll Recordings"
  },
  {
    "objectID": "speak/index.html#plan",
    "href": "speak/index.html#plan",
    "title": "Have David Wynn Speak",
    "section": "Plan",
    "text": "Plan\n\nSend a 1 page summary of the audience, goals, ideas, and any examples to similar works for background to my gmail at DavidBWynn\nI’ll acknowledge response within 1 business day\nI’ll give a more formal decision within 3 business days, where we’ll set up a time to discuss specifics"
  },
  {
    "objectID": "speak/index.html#other-resources",
    "href": "speak/index.html#other-resources",
    "title": "Have David Wynn Speak",
    "section": "Other Resources",
    "text": "Other Resources\n\nHeadshots\n\n   \n\nDavid Wynn - All Headshots.zip"
  },
  {
    "objectID": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html",
    "href": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html",
    "title": "What the DnD Community Needs in Light of the OGL and ORC",
    "section": "",
    "text": "I’ve been following with interest all the drama around the leaked Open Gaming License revision. Copyright is one of those things you never really shake once it’s touched your life, and as one that was deep into the Anime Music Video community around the time of Napster and all those (early?) copyright wars it’s interesting to see another round of this.\nWhat I’m struggling with this time, is why the wider DnD community, an incredibly sharp and creative group of people, seem absolutely determined to have a special license for themselves instead of building on the victories we won when Lawrence Lessig and Cory Doctorow were fighting the good copyfight."
  },
  {
    "objectID": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#the-background",
    "href": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#the-background",
    "title": "What the DnD Community Needs in Light of the OGL and ORC",
    "section": "The Background",
    "text": "The Background\nFor those that need a 30 second primer on the drama, here it is. The official publisher of what most people know as Dungeons and Dragons is Wizards of the Coast. Fundamentally, they publish books with rules, tables, flavor text, and art that describe how to play a collaborative improv game with dice. It’s been a niche hobby for almost 50 years now, but with the rise of Critical Role, Dimension 20, and other shows the game has been slowly creeping toward mainstream adoption.\nA big piece of making money in this business is the publishing of extra books that detail adventures using those core improv rules. To help facilitate this, with the third edition of the game, Wizards of the Coast (WotC) released the Open Gaming License in 2000. The stated goal was to allow non-WotC creators to write and publish these extra works that built on the rules DnD set forth without legal repurcussion.\nAnd it worked! There is a lot of DnD compatible content that has been written in the 20+ years since.\nBut… a leaked revision of an update to the OGL shows that WotC seems to want to revoke the freedoms of the old license and introduce a new version that severely restricts what people can do with DnD moving forward. That’s in addition to paying WotC 30% of gross sales on whatever they sell."
  },
  {
    "objectID": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#my-confusion",
    "href": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#my-confusion",
    "title": "What the DnD Community Needs in Light of the OGL and ORC",
    "section": "My Confusion",
    "text": "My Confusion\nIt’s not at all unclear to me why WotC would do this. 30% seems to be the magic number that every app store has put into other industry’s CEO’s heads as a cut they should take, and hiring a non-fan as CEO in an intensely fan-driven business seems to invariably lead to these kinds of conflicts.\nIt’s the community reaction that confuses me.\nDoctorow published a piece on the OGL recently (linking out to some great EFF writing too) that made, what I thought were incredibly important points. Namely:\n\nThe OGL is not legally phrased to last forever (perpetual licenses vs. irrevocable license), no matter how much the DnD community (or its original creators) want it to be\nThe OGL only allows for use of things that are not actually copyrightable anyway, and forbids things that are copyrightable… so there isn’t really much benefit to it\nThe only exception is a few areas of text that can be copy/pasted that would’ve been an unclear legal battle at best without the license\nThe community should consider battle tested open licenses like the GPL and Creative Commons rather than remaking their own license again\n\nThis all makes sense to me. In fact, several game systems such as Fate Core and Dungeon World are already built on Creative Commons, which seems to prove the validity of the last point.\nHowever, a major publisher in the field, Paizo (they make [arguably] the biggest DnD alternative), announced that they will invest their resources to make a new open gaming license, ORC.\nAs much as I like the irreverent style of their announcement, some of their commentary is weird. For example:\n\nWe believe that any interpretation that the OGL 1.0 or 1.0(a) were intended to be revocable or able to be deauthorized is incorrect, and with good reason. We were there.\n\nThat’s all well and good… but that’s not what got written in the license. And insofar as that’s the agreed upon language, the intent doesn’t really matter.\nThe community seems to be really in favor of Paizo’s approach, which to me, means the community is probably in need of some other things even more than a new license right now…"
  },
  {
    "objectID": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#what-the-dnd-community-really-needs-right-now",
    "href": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#what-the-dnd-community-really-needs-right-now",
    "title": "What the DnD Community Needs in Light of the OGL and ORC",
    "section": "What the DnD Community Really Needs Right Now",
    "text": "What the DnD Community Really Needs Right Now\n\nA Primer on Copyright Basics in Tabletop Role Playing Games (TTRPGs)\nWe need an explicit conversation around copyright and trademark as applied to TTRPGs. Most systems and ideas are not copyrightable, no matter what anyone claims. The murky parts of the text that’s leftover need to be addressed in clear terms, so people understand that you can’t copy the spell and feat descriptions, but you can use the same titles (I suspect… but I am not a lawyer).\nThis all probably needs to be explained in the context of bad actors too, if the foreshadowing from WotC is to be taken seriously. This is not unexplored territory in general, but it looks like it will be new to the TTRPG community\n\n\nA Centralized Explanation of Licenses in TTRPGs\nFor software, there are centralized explainers of all the different open licenses, explaining the different aspects of them that might not be apparent to a normal person reading them over. Even then, some licenses have more history that would be useful to highlight (“viral” licenses, etc.).\nIt might be the case that TTRPGs can generally rally behind Creative Commons. It might be the case that certain publishers want to go their own way depending on their plans. Even in software there are multiple perfectly valid licenses, depending on the effect you want to achieve as a creator.\nOr maybe there’s an opening for dual licensing, which is common in the software world. In that case there’s a fairly open license that covers the community editions of projects, but an enterprise license that covers the paid, supported version. Perhaps a model like this would ease hobbyists’ worries while still forming good, solid relationships between publishers?"
  },
  {
    "objectID": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#in-short",
    "href": "posts/what_the_dnd_community_needs_in_light_of_the_ogl_and_orc/index.html#in-short",
    "title": "What the DnD Community Needs in Light of the OGL and ORC",
    "section": "In Short",
    "text": "In Short\nIf we can level up the community’s understanding of the law and make it clear what everyone’s options are, then hopefully we can take this bad situation WotC has created and turn it into an even more positive one. As the Stoics would say…\n\nThe obstacle in the path becomes the path. Never forget, within every obstacle is an opportunity to improve our condition.\n- Ryan Holiday"
  },
  {
    "objectID": "posts/what-makes-a-good-star-wars-movie/index.html",
    "href": "posts/what-makes-a-good-star-wars-movie/index.html",
    "title": "What Makes A Good Star Wars Movie",
    "section": "",
    "text": "As The Last Jedi starts to hit theaters, it seems appropriate for me to write down what makes a good Star Wars movie. My take is a simpler metric than others might consider, completley disregarding plot and character development. It goes like this:  A graph, displaying how lightsabers correlate to joy in Star Wars, namely up and to the right\nIt’s that easy. Play Duel of the Fates, turn on a lightsaber (preferably two), and I AM IN.\nIt’s worth calling out that by this metric, I judge the prequals as wholly enjoyable movies (for the sum total of the time lightsabers are active). Character development? Plot? Onscreen chemistry? Don’t care, don’t care, don’t care. All I saw was Darth Maul lighting up the second lightsaber, Obi Wan avenging his mentor, Yoda kicking butt, and the Emperor pulling out the red goods. Seriously, I must’ve watched the fight scenes with Darth Maul at least a hundred times.\nThis is why Episode Seven and Rogue One really missed the mark. No lightsabers. Rogue One has a host of other issues, but this is by far the most important one.\nI have hope that the new film will set us back on a more lightsaber-ful path… but we’ll have to see."
  },
  {
    "objectID": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html",
    "href": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html",
    "title": "Thoughts on Dropout’s A Crown of Candy",
    "section": "",
    "text": "So I’ve been watching Dimension 20’s A Crown of Candy on Dropout. At time of writing, five episodes have been published. It’s been a real surprise to me how much I’m enjoying it. I thought I would explain why.\nFair Warning: spoilers through episode 5.\nI also make a few guesses at some things, and can’t wait to see how wrong I was."
  },
  {
    "objectID": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html#acoc-has-copious-room-for-genuine-plot-turns",
    "href": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html#acoc-has-copious-room-for-genuine-plot-turns",
    "title": "Thoughts on Dropout’s A Crown of Candy",
    "section": "ACoC Has Copious Room for Genuine Plot Turns",
    "text": "ACoC Has Copious Room for Genuine Plot Turns\nTypically in an RPG, even the ones Dimension 20 has done, there’s a big arc that everything gravitates to. The Big Bad Evil Guy is out there somewhere, and even if we take on a side quest here or there, there’s a sense that eventually we’ll have to go deal with that big Dragon / Nightmare / Mastermind that limits how far those turns can go.\nIn ACoC? not so.\nAny of the 7 kingdoms could have any number of plots to be crowned emperor of the land (or maybe to get rid of the system altogether?). Some nations might be better suited to some strategies than others, but at the moment it doesn’t look like any one big bad guy is cropping up… and that’s amazing. I bet Brennan has thought through how every kingdom is going to play this event for maximum gain. That means who the players choose to ally with and how and when all matter, and could significantly change the way the story unfolds.\nWhich brings me to another piece I’m finding fun…"
  },
  {
    "objectID": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html#brennan-is-playing-on-the-weaknesses-of-his-pcs",
    "href": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html#brennan-is-playing-on-the-weaknesses-of-his-pcs",
    "title": "Thoughts on Dropout’s A Crown of Candy",
    "section": "Brennan is Playing on the Weaknesses of His PC’s",
    "text": "Brennan is Playing on the Weaknesses of His PC’s\nThis is not these players’ first round of DnD. It’s not even their first campaign together as a group. These are professional comedians, trained in improv, and the players clearly thought the entertainment value was going to be their characters.\nAs such, we got a bumbling king, two comically rebellious daughters, and an aloof kid who’s “really more of a seed guy than a war guy.”\nAnd then Brennan dropped them in the heart of this mess, and they haven’t figured it out at all. I don’t think they’ve even started to grasp the shape of the cage they’re in.\nThis has heightened the suspense so much more than normal, even in typical scenes.\nFor example, when Ruby and Jet, subbing in for Lapin, head on the clandestine mission with Senator Ciabatta to infiltrate a fake priest’s home who has already arrested and from Ciabatta’s kingdom… I was holding my breath the entire time. Not because the mission turned out to be deadly. There was one guard Ciabatta dispatched of. But rather, trying to triangulate what the heck is actually going on had me on the edge of my seat the whole time.\n\nWhat does Ciabatta really want here? The priest is already captured.\nWhy did he ask for help from Candia at all? Ruby and Jet (and certainly Lapin) literally did nothing he couldn’t have.\nWhat was this priest’s game with all her blackmail? Was she working alone? Was she working with the church or against it? And if against it, than with who if not her own nation (or at least it’s biggest senator)?\nWhy are you letting Ciabatta take bag loads of black mail to do…. something that’s non-specific?\n\nAnd yet… all Ruby and Jet say at the end (because I imagine they’re focusing on their characters) is “wow, he was so cool!” Uh huh. And then he magically gets “mistakenly” called out as an emperor candidate the next day, eh?\nIn some sense, all the characters are allowed to be this naive, perhaps with the exception of Theo and Lapin. Theo may not be politically enough in the know, but has the right level of distrust. I was hoping to see more double-agent’ing from Lapin with the church, but with a battle in the cathedral next episode, that ship might’ve sailed.\nMy point is, they were all so focused on their characters, and on the easy emperor win for Candia, that no one has explored at all what the plans are for the Meatlands, or Veggieland. Breadland, Dairyland, and the church are clearly in the game right now, but it’s still so very early… assuming the PC’s wise up to the game they’ve been dropped into at all."
  },
  {
    "objectID": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html#in-sum",
    "href": "posts/thoughts-on-dropouts-a-crown-of-candy/index.html#in-sum",
    "title": "Thoughts on Dropout’s A Crown of Candy",
    "section": "In Sum",
    "text": "In Sum\nI’m having a blast this season because it’s basically Game of Thrones, the good parts, except easier to tell everyone apart because they’re literal food groups instead of all different white guys with beards.\nI suspect Brennan might have his first PC death this season if things continue at this rate.\nI’ll be watching, and so should you!"
  },
  {
    "objectID": "posts/the_seasons_of_TODO_systems/index.html",
    "href": "posts/the_seasons_of_TODO_systems/index.html",
    "title": "The Seasons of TODO Systems",
    "section": "",
    "text": "It’s funny how some TODO systems are better suited for certain times and situations than others.\nOnce upon a time I had a TODO system in Todoist with recurring tasks, reminders, views that only showed the shortly upcoming important tasks… a very programmed system. I’d moved away from it because it began to feel stifling, settling on something that was more akin to software development with a backlog and flexible prioritizing based on regular reviews. Foolishly, I thought I’d evolved the system to something strictly better for me personally.\nBut… then that system fell down. My life has been especially hectic lately with kids, holidays, and (I hope) an unusually high amount of illness and hospital visits. On a hunch, I reverted back to my more programmed Todoist approach (which was still there and humming, just a touch neglected), and I found it wonderful to have a system I didn’t need to think about, nagging me about doing basic things each day.\nSo it has me thinking… maybe TODO systems come in seasons rather than a pure measure of fit to a person. Sometimes you need a more nagging system telling you what to do. Other times you might need to optimize flexibility or ease of idea capture. No system is wrong, just better suited to the situation and timing at hand.\nI’m sure it’s not a revolutionary insight, but it was a bit of a jarring thing to live through first hand.\nMaybe when things calm down a bit I’ll change systems again, but as a parent that’s putting all my energy into the day to day, a more micro-explicit system is working very well."
  },
  {
    "objectID": "posts/the-power-of-you-are-here/index.html",
    "href": "posts/the-power-of-you-are-here/index.html",
    "title": "The Power of “You Are Here”",
    "section": "",
    "text": "One of the things I like about Stoicism is that it encourages thinking up new, shorter, pithier phrases for key ideas. More wisdom per word is the name of the game. For example (not all from Stoic writers):\nThere’s one I picked up from a non-Stoic text I’d like to share today: You Are Here.  I picked up this phrase from the Designing Your Life book published by the Stanford D-School professors Bill Burnett and Dave Evans. While not trying to be directly philosophical, there are a lot of great implications that run through those three words."
  },
  {
    "objectID": "posts/the-power-of-you-are-here/index.html#you-are-not-somewhere-else",
    "href": "posts/the-power-of-you-are-here/index.html#you-are-not-somewhere-else",
    "title": "The Power of “You Are Here”",
    "section": "You are Not Somewhere Else",
    "text": "You are Not Somewhere Else\nWhether physically, or in the sense of fate dealing you a different hand, the fact is that at this moment, what you have now is what you have. Wishing you’d been dealt a different hand, whether it’s a frustrated spouse, a failing product, or a screaming child, will not change the fact that in this moment, this is what you have.\nThe only question really worth considering is what will you do from here, with this?"
  },
  {
    "objectID": "posts/the-power-of-you-are-here/index.html#you-are-not-yet-where-you-plan-to-be",
    "href": "posts/the-power-of-you-are-here/index.html#you-are-not-yet-where-you-plan-to-be",
    "title": "The Power of “You Are Here”",
    "section": "You Are Not Yet Where You Plan to Be",
    "text": "You Are Not Yet Where You Plan to Be\nIt is great to have goals, but realizing goals and dreams takes real work. Remembering that we are here, and not _there, help crystallize that real work is required to reach important goals. As much as we might like to have already crossed the finish line, we’ll need to put one foot in front of the other until we’ve actually done so."
  },
  {
    "objectID": "posts/the-power-of-you-are-here/index.html#you-are-no-longer-where-youve-been-before",
    "href": "posts/the-power-of-you-are-here/index.html#you-are-no-longer-where-youve-been-before",
    "title": "The Power of “You Are Here”",
    "section": "You Are No Longer Where You’ve Been Before",
    "text": "You Are No Longer Where You’ve Been Before\nIt’s sometimes all too easy to get caught up in the past. Whether glory-filled better days or cringe-inducing mistakes, thoughts of the past can intrude on the present moment unbidden and all-consuming if not checked. You Are Here reminds us, that we are no longer there. No one living has a mistake-free past, and the past, insofar as we know, is unchangeable.\nWhat will you do next, from here, knowing that?"
  },
  {
    "objectID": "posts/the-first-bend-it-has-happened/index.html",
    "href": "posts/the-first-bend-it-has-happened/index.html",
    "title": "The First Bend: It Has Happened",
    "section": "",
    "text": "Though I have attempted to learn harmonica a handful of times in my life, I’ve always given up when it was time to learn bending. I can now proudly say, I have finally produced an absolutely terrible, but absolutely undeniable, bend on the harmonica.  I wanted to jot this down not only to mark the historic occasion, but also to list out the tech choices and motivation advice that really helped me break through the resistance this time."
  },
  {
    "objectID": "posts/the-first-bend-it-has-happened/index.html#the-key-tech-that-helped-me",
    "href": "posts/the-first-bend-it-has-happened/index.html#the-key-tech-that-helped-me",
    "title": "The First Bend: It Has Happened",
    "section": "The Key Tech That Helped Me",
    "text": "The Key Tech That Helped Me\nHarmonica.com’s Bend It Better tool (Explainer Link || Direct Link ) is amazing, and absolutely helped me figure out what I was doing… all for the price of free.\nSo many books and descriptions before had talked about tongue placement, but it all seemed so abstract. I could get the gist of what to do, but couldn’t actually connect the dots in my head to the harp in my mouth to make the note change. Trying to make my tongue more perfectly like the pictures and drawings wasn’t helping. This Bend It Better tool let me keep all that on the mental back burner and just focus on feeling out the right pitch.\nI tried some other tuning apps, and they might have worked OK, but it was hard to visualize where I was on the harp as I was stumbling around for a bend. The harp diagram layout of BIB is brilliant, and totally fit my mental model, letting me focus on the hard part in my mouth while getting instant feedback as I went.\nThe only trouble I had was getting it to work right on my phone (since I practice in my car). On my Android phone it works in Chrome and nothing else. I also have to be mindful about turning the mic on and off and closing the tab when I’m done or it tends to hang on to the mic, messing up other apps. Once I got the routine down though, it’s been smooth sailing, and I can’t give it enough credit for getting me past the first bend hump."
  },
  {
    "objectID": "posts/the-first-bend-it-has-happened/index.html#motivational-advice-that-helped-me",
    "href": "posts/the-first-bend-it-has-happened/index.html#motivational-advice-that-helped-me",
    "title": "The First Bend: It Has Happened",
    "section": "Motivational Advice That Helped Me",
    "text": "Motivational Advice That Helped Me\nThere is a lot of advice on bending along the lines of “it just takes practice.” I absolutely believe this, but I found it a little too vague for me. It didn’t help me understand what to do next.\nMaybe because I’m used to sports and weight lifting, the way bluesharmonica.com phrased it really resonated with me: you’ve just got to put in the reps. It’ll suck, but do it 100 times and it’ll get better.\nIt reminds me of an old Aikido saying: the way to learn to roll [on the ground] is to roll a thousand times. Then you’ll know how to roll. Same with bending.\nFocusing on reps let me bite-size any action, and just hit repeat over and over until it starting feeling better (or my mouth got tired) while being confident this is what practice should probably look like. Bend a note. Then bend it 10 times. Then bend it up from the blow and then down from the draw and back again. Bend it smoothly and bend it with a quick snap to the tone.\nBreak it down and conquer it a piece at a time, rather than just pulling in your breath funky for a few minutes and giving up."
  },
  {
    "objectID": "posts/the-first-bend-it-has-happened/index.html#a-thinking-framework-that-helped-me",
    "href": "posts/the-first-bend-it-has-happened/index.html#a-thinking-framework-that-helped-me",
    "title": "The First Bend: It Has Happened",
    "section": "A Thinking Framework that Helped Me",
    "text": "A Thinking Framework that Helped Me\nCaveat: this could be a terrible idea but it seems to have helped me with my minor breakthrough, so I’ll share it for others.\nI find a lot of the information on bending focuses on tongue position and placement. When I focused on this, I found that the advice didn’t really connect, and I wasn’t getting the bend I was looking for either.\nWhat did start to work well, was focusing on drawing the air to a particular point on my hard palette (or behind it). Then I found in making that happen my tongue would end up the right shape more often than not.\nHopefully that’s not terrible advice for newbies, because it seemed to help me."
  },
  {
    "objectID": "posts/the-first-bend-it-has-happened/index.html#looking-ahead",
    "href": "posts/the-first-bend-it-has-happened/index.html#looking-ahead",
    "title": "The First Bend: It Has Happened",
    "section": "Looking Ahead",
    "text": "Looking Ahead\nI can tell now the next challenge is… my bends are just terrible to listen to. I don’t like how they sound, and I kind of can’t imagine lying to anyone and calling them “music.”\nI’m reminded of the amazement I always had watching trombone and violin players find notes seemingly out of nowhere. I never took up those instruments precisely because I thought it would be too hard.\n… But the only way to get good is to put in the reps. I am committed for at least a month. So let’s see how we fare at the end of it… even if I’m currently dreaming of switching to chromatic harp or trying ocarina instead where I can run from this scary thing I’ve just started to learn."
  },
  {
    "objectID": "posts/TestGuild-DevOps-Toolchain-Podcast-2024-03/index.html#episode-description",
    "href": "posts/TestGuild-DevOps-Toolchain-Podcast-2024-03/index.html#episode-description",
    "title": "TestGuild DevOps Toolchain Podcast 2024-03",
    "section": "Episode Description",
    "text": "Episode Description\nToday, we’re diving deep into the world of observability with David Wynn, a solution architect and expert with a 15-year tenure in cloud services and observability, particularly in the gaming industry. In this episode, we’re peeling back the layers of observability, differentiating it from traditional monitoring, and exploring the transformative role of AI in DevSecOps.\nDavid will enlighten you on starting with observability by centralizing logs, utilizing tools from Datadog to Edge Delta, and the dynamic need to make sense of complex systems through outputs.\nWe also delve into how observability is evolving with the rise of microservices and distributed systems, holding an in-depth discussion about the pillars of observability—logs, metrics, and tracing—and the indispensable role of tools like OpenTelemetry.\nDavid shares anecdotes from his time in the gaming industry, shedding light on the nuances of observability infrastructure within different types of games and how it goes beyond keeping tabs on system statuses, aiming for a comprehensive comprehension of system activities.\nFurthermore, we’ll discuss the ‘shift left’ approach and the advent of AI in enhancing observability tactics.\nSo, buckle up for a riveting conversation, whether you’re an SRE, a DevOps specialist, or just intrigued by the intersections of AI and system observability."
  },
  {
    "objectID": "posts/pocket-vs-instapaper/index.html",
    "href": "posts/pocket-vs-instapaper/index.html",
    "title": "Pocket vs. Instapaper",
    "section": "",
    "text": "When I started the BASB course, I had no strong preference for which read-it-later app to use. I’d put stuff in pocket for years (even before it was baked into Firefox), and I still had an old Instapaper account with some articles I’d saved in 2007.\nI’ve ended up bouncing back and forth between them, and I wanted to document why."
  },
  {
    "objectID": "posts/pocket-vs-instapaper/index.html#recommendations-first-instapaper",
    "href": "posts/pocket-vs-instapaper/index.html#recommendations-first-instapaper",
    "title": "Pocket vs. Instapaper",
    "section": "Recommendations First: Instapaper",
    "text": "Recommendations First: Instapaper\nBefore I’d even switched from org mode to Evernote, I saw Instapaper was the blessed default in the example library. So… sure?\nAll my impressions of Instapaper were (and still are) great. It’s simple, clean, easy to highlight and take notes on. It’s got great colors and the export all highlights in an article function worked well… most of the time.\nThe big challenge came when I bought a second tablet (a Kindle Fire 10) to read on, because I got supremely frustrated trying to type notes on my Kindle. There is no official app for Instapaper. Fire tablets are a lot easier to sideload these days than they used to be, but even then the app detected the OS wasn’t well supported, and the highlighting would occasionally come out with the text all mixed together. Very strange, and immediately on my list to de-friction."
  },
  {
    "objectID": "posts/pocket-vs-instapaper/index.html#back-to-pocket",
    "href": "posts/pocket-vs-instapaper/index.html#back-to-pocket",
    "title": "Pocket vs. Instapaper",
    "section": "Back to Pocket",
    "text": "Back to Pocket\nSo I fired up Pocket, which does have a support app on the Amazon Appstore, and went to town. At first it was nice, but then I noticed a problem…\nThere appears to be no way to export all the highlights for an article in a sane fashion. You can display them all, but not actually export them. I sent an email to support and confirmed this.\nFortunately, Readwise can do exactly this (even though it’s yet another service). So I gave that a shot and it worked perfectly.\n…. until I realized Pocket doesn’t support notes, only highlights.\nWelp, that’s a deal breaker. So back to Instapaper."
  },
  {
    "objectID": "posts/pocket-vs-instapaper/index.html#back-to-instapaper",
    "href": "posts/pocket-vs-instapaper/index.html#back-to-instapaper",
    "title": "Pocket vs. Instapaper",
    "section": "Back to Instapaper",
    "text": "Back to Instapaper\nWhat I brought with me this time though, was Readwise, which seems to have solved the text problem in whatever fashion they do. So ultimately, I’m getting the best of both worlds now"
  },
  {
    "objectID": "posts/pocket-vs-instapaper/index.html#one-catch",
    "href": "posts/pocket-vs-instapaper/index.html#one-catch",
    "title": "Pocket vs. Instapaper",
    "section": "One Catch",
    "text": "One Catch\nThe only catch with this Instapaper + Readwise combo is that Readwise only scrapes Instapaper once or twice a day, and then exports to Evernote once per day. This makes sense, but it would be nice if it was configurable in some fashion."
  },
  {
    "objectID": "posts/my-path-to-org-mode/index.html",
    "href": "posts/my-path-to-org-mode/index.html",
    "title": "My Path to Org Mode",
    "section": "",
    "text": "Since this isn’t my first attempt at working with a PKM tool, I thought I would kick off this series by recapping the tools I’ve used thus far."
  },
  {
    "objectID": "posts/my-path-to-org-mode/index.html#pre-2020-dot-dot-dot-org-to-other-tools-to-org-again",
    "href": "posts/my-path-to-org-mode/index.html#pre-2020-dot-dot-dot-org-to-other-tools-to-org-again",
    "title": "My Path to Org Mode",
    "section": "Pre-2020… Org to Other Tools to Org Again",
    "text": "Pre-2020… Org to Other Tools to Org Again\nMy first attempt at using org mode was with a vanilla installation of emacs many many years ago… but it was a somewhat lackluster experience. In addition to having no idea what I was doing (and no community to ask for help), I insisted on using Org headlines as if Org was a pure outliner (with no folded text underneath headlines). A big mistake. That led to a few customizations to the RET key functions early on that hampered growing any functionality over time. Short term gains, long term pains.\nFollowing that I bounced through a number of other tools. I used Dave Winer’s Little Outliner (called Fargo at the time, if memory serves), a simple pile of Markdown Files (edited with Atom, when that editor was the bees knees), and even just Google Drive. Those all had their trade-offs, be it start times, connectivity issues, search-ability, or my own trust issues with how the files were kept.\nBy the time I decided to give Org mode another try in 2019, Spacemacs had become popular, and was a tremendous improvement for me. The pop up keys were magical. Learning the vim keys was something I’d always wanted to do and was actually pretty fun. I had a journaling habit that solidified regular use, and things were humming along OK, even on my Chromebook.\nSure, updates were… opaque. And I didn’t understand why things would break from time to time… And trying to learn what org could do, and then map it to the Spacemacs org layer was a bit of a maze… but it wasn’t too bad all in all.\nSo, I was initially planning to keep using Org mode for my first BASB course (Cohort 10 in 2020)."
  },
  {
    "objectID": "posts/my-path-to-org-mode/index.html#evernote",
    "href": "posts/my-path-to-org-mode/index.html#evernote",
    "title": "My Path to Org Mode",
    "section": "Evernote",
    "text": "Evernote\nHowever, once the course began, I realized there would be a lot I would have to figure out about emacs that had nothing to do with PARA or CODE or any of the other core concepts being taught… mostly related to getting info into and out of the system. Mobile sync was challenging. Capturing from different info sources would require a lot of thought for each flow. I would have to keep grokking more and more elisp as I went.\nThe 40 year old editor was fighting me instead of helping me.\nSo, I hopped off of Emacs and went with the course’s default of Evernote. This was a great move. I unquestionably understood the concepts more deeply by using the tool they were built around. There was also the benefit of a slicker, web-based app since I happened to be trapped with only a Chromebook at the time. The Stylus extension let me at least change the color of the web app, and plenty of the tools were good enough, even if Evernote wasn’t programmable in any real sense.\n… but I could never shake the feeling that I was afraid of the files not being where I could see them on my hard drive. Like with pure Google Docs, internet connectivity occasionally proved to be a challenge. And having to look up a dynamic daily prompt elsewhere to copy and paste it into my morning journal got annoying.\nI wanted BASB to be more."
  },
  {
    "objectID": "posts/my-path-to-org-mode/index.html#obsidian",
    "href": "posts/my-path-to-org-mode/index.html#obsidian",
    "title": "My Path to Org Mode",
    "section": "Obsidian",
    "text": "Obsidian\nThen I heard about Obsidian, an up and coming tool that promised to let me see and keep my files, and do a bunch more than Evernote could.\nObsidian proved to be a great choice, and the program has only gotten better with time. Journaling was easy. The community was great. I started following voices like Eleanor Konick and Nick Milo. I was introduced to (and then rejected) Zettelkasten as an organizing framework. It was a really fun time to get involved.\nBut…. as I dug more and more into the tool I realized… I’m really an outliner kind of person at heart. It’s how I think, how I like features to be arranged, and how I like to navigate. There were a few Obsidian plugins to help make bulleted outlines more manageable, but the keyboard shortcuts did unexpected things sometimes, the display didn’t work well with certain themes, tiny plugins would conflict with each other… ultimately it felt a bit too uncoordinated for how I like to work. Even zooming into a section of a document outline was implemented as a plugin that…. usually worked. I didn’t like the idea that such key components of how I engaged with my ideas were dependent on some little plugins that might stop working any day in this rapidly developing product.\nSo while it was thrilling watching the plugin ecosystem spring up, the frustration of having to continually rework them all as the app and API changed grew and grew. If I’d come to Obsidian a year or two later I might still be on it, but it just didn’t quite fit. The change was coming from outside of me, and it was hard to trust.\nI also found writing my own plugins to be incredibly frustrating. I could make a few things work with some very explicit examples, but it seemed harder than it should’ve been. And building on top of helper plugins led to even more rapid-change challenges.\nSo I went in search of something where I wouldn’t be quite so plugin dependent."
  },
  {
    "objectID": "posts/my-path-to-org-mode/index.html#logseq",
    "href": "posts/my-path-to-org-mode/index.html#logseq",
    "title": "My Path to Org Mode",
    "section": "LogSeq",
    "text": "LogSeq\nRoam caught my eye for about half a minute, but the die hard fans turned me off of the approach. Anything that proudly called itself a cult was not for me. And again, web based, even in the fledgling mobile version.\nBut then came LogSeq. A local-first, open source version of Roam. Some have quibbled with how the project is governed, which is fair, but I felt much more comfortable building on it than the other options. And hey look! It supports org files as well as markdown! What a fun throwback!\nAll was well at first. It was nice to have a proper outliner at hand. It’s a more minimal experience than in Obsidian, but it also covered pretty much all the bases.\n… but then I noticed the performance started to really suck on long documents. I had to fold and unfold different headings just to move around efficiently. The query language was good, but I had a few cases for advanced queries where the documentation was absolutely non-existent. Once again, it felt like I was fighting the tool rather than working with it.\nI hit the final straw when I couldn’t for the life of me figure out how to display my “prompt of the day” in my morning journal from a list. It shouldn’t have been that hard. I had it in a cloud function. I had it in raw JS. I had it in an array. There were options! But again I just couldn’t figure out how to get through all the DOM layers to make it display as part of my morning template."
  },
  {
    "objectID": "posts/my-path-to-org-mode/index.html#emacs",
    "href": "posts/my-path-to-org-mode/index.html#emacs",
    "title": "My Path to Org Mode",
    "section": "Emacs",
    "text": "Emacs\nThen, two things happened:\n\nA few fortuitous blog posts came across my Mastodon feed talking about how they used org mode in 2023 (thanks Nick!)\nI found System Crafters doing the immeasurably valuable work of intelligibly walking through building an emacs config Emacs from scratch into something more like Spacemacs\n\nSo, I decided it was time to return to the where I came from.\nIn a sea of new tools, it was time again to bet on the one that’s been around the longest."
  },
  {
    "objectID": "posts/moving-to-write-as/index.html",
    "href": "posts/moving-to-write-as/index.html",
    "title": "Moving to Write.as",
    "section": "",
    "text": "I’m beginning the process of moving my blog to write.as.  The reasoning is fairly simple: I don’t really have time to tweak the Hugo setup anymore while on COVID lockdown with a toddler, and I’d like to start blogging again. So I choose to move. The writing experience is as simple as can be on this platform, and since I’m trapped away from my desktop during COVID lockdown, I’m looking into web-based platforms to do more and more.\nI’m also taking Tiago Forte’s Building a Second Brain course, and trying to take some of the principles to heart. One in particular, is removing friction wherever possible. My hugo setup was fun, but even at that modest complexity I was beginning to fear opening it at all for fear of breaking anything. Write.as simply gives me a blank page to put in some Markdown. Beautiful.\nMy only concern is making sure a handful of article URLs make it in the transition. Breaking the web is bad, and should be avoided wherever possible. But there are only a handful I care about, along with the about page. It might be doable… but the shift from static site served out of a Google Cloud Storage bucket to a completely managed solution means I would have to handle this in an awkward layer… DNS I suppose? I’ll have to see if it’s worth the effort and write about it later.\nActually, scratch that, I’ll just use a new subdomain for the blog and leave the old site running as is. Produce first, link back later."
  },
  {
    "objectID": "posts/magsafe-on-iphone-is-wonderful-and-should-be-a-wider-standard/index.html",
    "href": "posts/magsafe-on-iphone-is-wonderful-and-should-be-a-wider-standard/index.html",
    "title": "MagSafe on iPhone is Wonderful and Should be a Wider Standard",
    "section": "",
    "text": "When I was first stranded across the country due to COVID, I was sadly without my sunrise alarm clock (which I will probably use forever at this point). The closest thing I could get without buying a whole new clock was the Pixel Stand, which gave the Pixel a sunrise alarm along with it.\nThe alarm itself was a little finicky, but it took actually putting the device on and off the charger for me to appreciate how nice wireless charging is.\nThat said… the positioning on the Pixel Stand was always finicky and annoying. My in laws had a different third party wireless charge for their phones, and while it was easier to target, it certainly never felt like I put it in the “perfect” spot.\nSwitching to iPhone introduces… MagSafe. Finally a nice, clean feedback mechanism for correct positioning in wireless charging. This should be a standard, and it’s practically a crime it isn’t implemented in all phones.\nThe gentle tug to get in line. The snug confirmation you’re in the right spot. The moderate but not too much effort it takes to pull off. It’s all wonderful, and I very much do not want to go back to being without it.\nShame on Apple for hoarding this one for themselves. Make the world a better place and make the phone version of MagSafe something everyone can have, regardless of phone model."
  },
  {
    "objectID": "posts/interstitial-journaling-in-obsidian-with-a-stripped-down-quickadd/index.html",
    "href": "posts/interstitial-journaling-in-obsidian-with-a-stripped-down-quickadd/index.html",
    "title": "Interstitial Journaling in Obsidian with a Stripped-Down QuickAdd",
    "section": "",
    "text": "Update: I moved to handling this in pure QuickAdd not too long after I sketched this out.\nFirst, it’s absolutely amazing to me how fast development is going with the Obsidian space. The number of things that are 1-2 weeks old that radically alter my workflow are just mind boggling.\nAn example that I started working with is chhoumman’s QuickAdd, courtesy of Eleanor’s Round Up.\nWhile I had trouble getting the script as written, which is way over-engineered for my needs, I stripped out the basics into a simple “add this line from a prompt to the Daily Note” tool, which is absolutely perfect for Interstitial Journaling, which I stumbled on for the first time the other day.\nIJ seems like a great combination of multiple factors to help keep me focused on what I’m doing during the day, and putting it in a templater template means I have access to the same workflow across my Windows Desktop and my Chromebook since they’re in sync with Obsidian Sync!\nI’m looking forward to trying this out, particularly with a mix of lighter and heavier workdays ahead."
  },
  {
    "objectID": "posts/hidden-elements-are-bad/index.html",
    "href": "posts/hidden-elements-are-bad/index.html",
    "title": "Hidden UI Elements are Bad",
    "section": "",
    "text": "I would like to start by saying that minimal design is a good thing. Clutter is objectively bad, and it takes a lot of really difficult work to cram a lot of capability into a smaller and smaller UI surface. I am completely acknowledging that.\nThat said, some gestures on the iPhone can go screw themselves.\nIn particular, whoever decided that swipe up from the bottom but not too much was a good idea should be publicly shamed.\nAgain, I understand the need to fit more functionality into a less space. If they break down the swipe up gesture into a little and a lot variants, you get two functions for the price of one. It makes sense… on paper.\nBut in reality? When I’m switching phones and trying to figure out what the distances are on all these swipes? It’s really terrible.\nOn top of that, the animation for close an app looks awfully similar to the end of the animation for dismiss the app carousel. Given that they both use the same overloaded swipe up gesture it’s just… incredibly uncomfortable not knowing what happens when I stutteringly swipe up, which happens from time to time on the big phone screen.\nI wish they took Android’s cue for the three buttons at the bottom. Then I would know when I’m summoning the carousel, and when I’m not. Calling in a HUD also gives you a lot more options to make features visible when needed, rather than overloading a fixed set of UI options.\nI know Android implemented a similar semi-swipe up an OS update or two ago, but I immediately found a way to get the buttons back. No such luck for customization on Apple.\nApple keeps trimming UI elements to the point where functionality is now ambiguously hidden instead of just out of the way. To me, that seems like a bad line to cross."
  },
  {
    "objectID": "posts/harmonica-week-01/index.html",
    "href": "posts/harmonica-week-01/index.html",
    "title": "Harmonica Week 01",
    "section": "",
    "text": "I’m aware that it’s dangerous writing too much about stuff that’s in progress, but I’m hoping keeping a weekly-ish account of my thoughts will be more instructive than not.\nI’m learning the harmonica, in case the title wasn’t obvious.  I’m trying to model this a bit as an Ultralearning project a la Scott Young. So I figured a good first post would be to outline the framework I’m starting under."
  },
  {
    "objectID": "posts/harmonica-week-01/index.html#goals",
    "href": "posts/harmonica-week-01/index.html#goals",
    "title": "Harmonica Week 01",
    "section": "Goals",
    "text": "Goals\n\nI want to be able to really wail on sad notes in songs that I feel like I can’t sing as well anymore\nI want to be able to bust out geek songs at Dragon Con on demand, focusing on this genre as opposed to blues or rock\n\nIt’s not a thing where I’m going for cool, I’m going for remix culture and leaning on the familiar\nMaybe improvising within those lines, but that’s the base\n\nI want to connect with an artistic expression side of myself that I don’t always find easy to connect to\nI want be able to translate any geek song into a harp doable arrangement"
  },
  {
    "objectID": "posts/harmonica-week-01/index.html#whats-the-lesson-plan",
    "href": "posts/harmonica-week-01/index.html#whats-the-lesson-plan",
    "title": "Harmonica Week 01",
    "section": "What’s the lesson plan?",
    "text": "What’s the lesson plan?\nMy Harmonica (Special 20) came with a www.bluesharmonica.com free trial, so I figured I’d start with that. It’s for blues, but certainly the basics are probably similar.\nTo mix with that, I’ll pull from harmonicatabs.com to mix in other music I’m interested in.\nI’ll practice twice a day, 30 minutes scheduled during the day and up to 30 minutes after the kid goes to sleep. Due to space constraints (and to keep my family from throwing things at me), the car will be my concert hall.\nWe’ll re-assess the approach each month, with weekly reviews as we go.\nThere’s also a good checklist I found from some Harmonica YouTube video that gives specifics on what you should be able to do as a competent beginner.\nNamely:\n\nCan you play a clean, single note on all draw and blow holes?\nPlay the harmonica in just the left hand\nCan you play a rhythm pattern for 1 minute without running out of breath?\nDo you know more than 1 melody by heart?\nCan you play a major scale in both directions?\nCan you produce a Hand Wah that is distinct to other listeners? (doesn’t have to be perfect)\nCan you sketch out a tab that you understand?\n\nI’d like to try and get there within a month if I can swing it."
  },
  {
    "objectID": "posts/first-thoughts-on-pokemon-unite/index.html",
    "href": "posts/first-thoughts-on-pokemon-unite/index.html",
    "title": "First Thoughts on Pokemon Unite",
    "section": "",
    "text": "Getting into MOBA style games is a terrible habit, and no one should do it, ever.\nThat said, as one who doesn’t take my own advice and who tried out the newly released Pokemon MOBA for a few hours today, I figured I would share my thoughts here.\nIn short, there’s a lot that Pokemon Unite (PU) gets right. There’s also a lot that may or may not jive with fans of the genre. Let’s dive in."
  },
  {
    "objectID": "posts/first-thoughts-on-pokemon-unite/index.html#the-good",
    "href": "posts/first-thoughts-on-pokemon-unite/index.html#the-good",
    "title": "First Thoughts on Pokemon Unite",
    "section": "The Good",
    "text": "The Good\n\nThe Matches are Short\nNo surprise given the intent to port it to mobile and the targeting of a more casual fan base. As a busy dad, I approve of the 10 minute limit. The goal mechanic (as opposed to destroy the core mechanic) also gives some interesting strategic choices for who should dunk when. More on that later.\n\n\nThe Controller Mapping is Pretty Easy to Grok\nAs one who has spent more time trying to map a controller to Wild Rift both on an Android device and in BlueStacks than I would care to admit, I have to say PU does a great job of making the controls feel natural.\nThat said, I can see some of the trade-offs they’ve made to get there. Only giving two abilities plus an ult means that a a single side of the controller shoulders handles most of the ability set. I’m sure it also affects ability design, with a preference given to AOE and auto-lock abilities over really tricky to time/aim abilities. I know I’ve been playing the starter set of pokemon so far, but I can’t imagine controller limitations not being a reality as they think through ability design.\n\n\nThe Cosmetics are Surprisingly Fun\nI’m hit or miss when it comes to cosmetics, but the ones in PU are subtle while allowing for a surprisingly wide range of styles. It’s still very mapped to the Pokemon Trainer vibe, but you can tweak a lot of elements and have fun toying around with it. I’d be shocked if they didn’t enhance this more later.\nThat said, the skins for the Pokemon themselves are all wonderful and I could see that being a big draw.\n\n\nMid-Game Build Flexibility is Handled Well\nWhile the choices are small, the fact that you can tweak a character’s build mid game (especially for the “all-around” class) is a really cool thing. I could imagine this becoming important in climbing the ranked ladder, but more importantly it’s implemented in a very simple, clear way. Well done devs!"
  },
  {
    "objectID": "posts/first-thoughts-on-pokemon-unite/index.html#the-bad",
    "href": "posts/first-thoughts-on-pokemon-unite/index.html#the-bad",
    "title": "First Thoughts on Pokemon Unite",
    "section": "The Bad",
    "text": "The Bad\n\nThere’s a Lot of Button Mashing\nPartly as a result of the focus on easy-to-use controller mechanics, the gameplay tends more toward button mashing than most MOBAs. Simply putting abilities on cool-down, instead of tying them to mana, compounds this factor. Now you’ve got three buttons to mash rapidly whenever a bad guy comes around (attack, ability 1, and ability 2).\nI suspect we won’t see any ability sets that get really interesting like in other MOBAs (multiple characters, ability modifiers, Abathur, etc) that normally go on the number row because… well… there isn’t one.\nIt also limits how strategic fights can get, since the auto-targeting is going to be doing a lot of work.\n\n\nThe Character Set is Small\nWith only 20 pokemon, and 5 classes (with sub-categories like ranged/melee as well) there is a real feeling of not quite enough variety here at launch. I’m not sure how long it’ll take to crank out new characters, but for those who aren’t willing to shell out all the money upfront, character acquisition is slow, and makes character selection feel very limited for new players.\nThat could be good if you’re new to the scene. I know I’ve complained a lot about learning 80+ characters when switching titles. But this roster just felt a little too small, even for me, an older hand at the genre.\n\n\nGame Sense is in Short Supply\nI know it’s day 2 of release, but it’s pretty clear that people working their way through the tutorial grind have no sense of MOBA strategy. I’ve seen tanks steal from carries (which matters a lot with individual leveling in PU). I’ve seen teammates walk obliviously by easy ganks. I’ve seen people take stupid goals, mis-understand score mechanics, and ignore group speed effects. The variance is wide.\nMaybe this will improve in ranked as part of the climb, but it’s rough starting out.\n\n\nTargeting is Tricky\nI mentioned this earlier, but targeting definitely takes some getting used to. It’s a bit like a console aim-assist in FPS games. You learn to work with it rather than against it. Because there’s a physical controller in my hand (and I’m not at my PC) I don’t miss being able to target with my mouse too badly, but I’m actively annoyed at skill shot moves instead of simply planning for them."
  },
  {
    "objectID": "posts/first-thoughts-on-pokemon-unite/index.html#the-ugly",
    "href": "posts/first-thoughts-on-pokemon-unite/index.html#the-ugly",
    "title": "First Thoughts on Pokemon Unite",
    "section": "The Ugly",
    "text": "The Ugly\n\nThe Vibe Might be a Little… Too Familiar\nI’ve seen this homescreen before. I’ve seen this daily quest list. It’s got more polygons characters and less hand drawn art, but I’ve seen most of this before.\nMy biggest concern is that it might get boring a bit quickly because of that. Ranked may prove to be a good experience, but I won’t know until I get out of Bronze (which there was no placement for… just start from the bottom).\nThe tutorial climb to unlock active abilities is also proving to be pretty League-level long, which is weird given the number of games I’ve already played.\n\n\nThere is Some Pay to Win\nThere are caps on stat-enhancing items you can bring in, and at my current ELO jungle pathing is way more important than items, but this could definitely rub some people the wrong way."
  },
  {
    "objectID": "posts/first-thoughts-on-pokemon-unite/index.html#wish-list",
    "href": "posts/first-thoughts-on-pokemon-unite/index.html#wish-list",
    "title": "First Thoughts on Pokemon Unite",
    "section": "Wish List",
    "text": "Wish List\n\nI Wish I Could Tel the Game I’ve Played DOTA/League/HotS/MLBB/Wild Rift Before\nI think about this with all the MOBAs, because I know very few players who are into just one. The tutorial phase (which I’m still climbing out of several hours in) is pretty long, and I wish I could give it a frame of reference so it would skip some of the basics and maybe highlight some key differences.\nCome from League? We only have one two lanes, one item, two abilities, and everything’s on cooldown. Coming from HotS? Levels are trakced per character, there are no creeps, and towers don’t shoot at anything.\nIt boggles my mind that these games wouldn’t want to make it easy to switch between them.\n\n\nI Wish I Could Buy a Starter Pack\nAnd not just standard mobile currency stuff!\nMost MOBAs (admittedly once they have a bit larger roster) allow for purchasing a set of heroes to expand the diversity of the early experience. I like it because it let’s me put a little skin in the Free 2 Play game, and also expand the play styles I can tinker with right away.\nNo such thing in PU. Hopefully that comes around soon. Even the ability to just buy 5 more Pokemon at a discount would be great.\n\n\nI Wish There Were More Maps\nThey’ve eschewed the traditional DOTA/League map for one that’s much more HotS like. I hope they continue in this vein and really make the map another gameplay element to consider. You can see them starting this with the daily quick games, but even in standard and ranked there’s room for diversity among the jungle monsters, map layouts, and goal configurations."
  },
  {
    "objectID": "posts/dimension-20-a-crown-of-candy-finale-pt/index.html",
    "href": "posts/dimension-20-a-crown-of-candy-finale-pt/index.html",
    "title": "Dimension 20 - A Crown of Candy - Finale pt. 2",
    "section": "",
    "text": "Boy, there was some great wrap-up in there, and some disappointment for me as well.  First, I share Brennan’s sentiment in that first moment of the combat for this engagement: He messed up on this homebrew a bit. That whole battle went a bit too smoothly, especially after that nice tee-up on the night before to set up some PvP. Maybe just like in Escape from Bloodkeep, the power of DnD to make friends is just too strong.\nThat said, big shout out to the dice this round, with absolutely killer story rolls coming up. Payment Day was extremely poetic, Cinnamon was strong, Liam’s arc was awesome… and on and on. So in one sense it was very rewarding… but there was no sacrifice, no cost. I’d expected a bit more of a trap card than that given the GoT setting. The big bad NPC’s… didn’t really do much. So it felt a little steamroll-ish. Unusual for Dimension 20.\nI would’ve liked to see more heroes come back in the finale, as Brennan likes to do. The zoomed out scale seemed to make that tough though. Trade-offs, I suppose."
  },
  {
    "objectID": "posts/dimension-20-a-crown-of-candy-finale-pt/index.html#reflecting-on-the-broader-series",
    "href": "posts/dimension-20-a-crown-of-candy-finale-pt/index.html#reflecting-on-the-broader-series",
    "title": "Dimension 20 - A Crown of Candy - Finale pt. 2",
    "section": "Reflecting on the Broader Series",
    "text": "Reflecting on the Broader Series\nLiam’s arc really stands out to me as my favorite. From seed guy, to unwanted war guy, to absolute vengeful badass, to seed guy again… I pretty much enjoyed every bit of that. A big thanks to Ally.\nThe RP episode before the finale uncovered a lot of story beats that would’ve been worth exploring in depth. A lot of the D20 shows have amazingly good pacing in this regard, but the end on ACoC felt a bit rushed… only because that episode after the ice cream temple was so good. I know I’m a sucker for role play in DnD… but I don’t think I was the only one that saw that.\nSo all in all, I’d say this one was absolutely worth the watch. Great world building, great character development, great arcs all around. A little saccharine at the end, but maybe even that’s thematically appropriate ;-)"
  },
  {
    "objectID": "posts/dimension-20-a-crown-of-candy-episode-6-notes/index.html",
    "href": "posts/dimension-20-a-crown-of-candy-episode-6-notes/index.html",
    "title": "Dimension 20 - A Crown of Candy Episode 6 Notes",
    "section": "",
    "text": "Spoilers, obviously.\nFirst, totally called that player death. I’m so sad it was Lapin, but the lesson is real… DnD after 1am never leads to good things.\nThat said, there’s nothing like a somber quiet among the players to heighten the tension in a tough battle.\nAlso, a beautiful last moment for him. The tough part going forward will be to not meta-game around the info Lapin got, but it’ll be what it’ll be.\nWith a real PK on our hands, now we’re really into Game of Thrones territory.\nShame they left Monterrey shackled up. I genuinely wonder what would’ve happened if they submitted to arrest. Or heck, if they got the pontifax, who would’ve been pulling the strings then?\nI also still think Amethar should have avoided this by claiming he was justifiably nominated by Theo, even if his kingdom is at war. I doubt it would’ve changed too much, but wasn’t that the whole point of re-nominating him?\nAnyway, hooray fun DnD games!"
  },
  {
    "objectID": "posts/dimension-20-a-crown-of-candy-episode-6-notes/index.html#update-with-more-thoughts",
    "href": "posts/dimension-20-a-crown-of-candy-episode-6-notes/index.html#update-with-more-thoughts",
    "title": "Dimension 20 - A Crown of Candy Episode 6 Notes",
    "section": "Update with More Thoughts",
    "text": "Update with More Thoughts\nThe thing that I find really striking about this game is that the group is playing Lord of the Rings while Brennan set up Game of Thrones.\nIn fact, it goes even a step further. Harry Potter and the Methods of Rationality (which if you haven’t read, you should!) has a line which I will quote wrongly, noting that many characters don’t even understand which story they’re in and who the hero is, leading to lots of chaos if we can’t get on the same page.\nJet and Ruby think they’re in a coming of age story. Amethar thinks he’s in a story about the clash of his past and future. Lapin thinks (ahem, thought) he was in a story where the Sugar Plum Fairy pulled the strings.\nAll of this has led to what in hindsight, as well as readily foresight, seems like unnecessary chaos. The cast even mentions this as they say things like “oh no… I think I would rush her, but oh no…”\nBrennan’s set up waits for them to rise to the occasion (even though politics is now out as a viable option a bit). I hope they do."
  },
  {
    "objectID": "posts/creating-a-post-api-for-hugo/index.html",
    "href": "posts/creating-a-post-api-for-hugo/index.html",
    "title": "Creating a POST API for Hugo",
    "section": "",
    "text": "As part of my effort to improve the posting flow (and to tinker with GCP tools), I decided to make an api that would allow me to post to Hugo from other clients in the wild. The adventure was… enlightening? Is that what we say at the end of these journeys?"
  },
  {
    "objectID": "posts/creating-a-post-api-for-hugo/index.html#before-we-begin",
    "href": "posts/creating-a-post-api-for-hugo/index.html#before-we-begin",
    "title": "Creating a POST API for Hugo",
    "section": "Before We Begin",
    "text": "Before We Begin\nBefore anyone jumps in to mention Staticman, yes, I’ve heard of it. I know it fills the same niche and has the benefit of already existing. That said, there were two reasons I didn’t go that route.\nFirst, I wanted to keep my source code in Cloud Source Repositories… more out of laziness than principle though… and it there doesn’t seem to be an api for them the way there is for Github.\nSecond, I wanted to build an IndieWeb capable endpoint, and to my knowledge Staticman doesn’t fit the case there. So… from scratch we go!"
  },
  {
    "objectID": "posts/creating-a-post-api-for-hugo/index.html#sketching-it-out",
    "href": "posts/creating-a-post-api-for-hugo/index.html#sketching-it-out",
    "title": "Creating a POST API for Hugo",
    "section": "Sketching It Out",
    "text": "Sketching It Out\nThe end state of this seemed pretty clear: I needed an api that would take a post, put a file in the repo, and then commit it, kicking off the build process I established in a previous post.\nAn api on the source control side to add a file to a repo would’ve been great, but Cloud Source Repositories don’t seem to have that. So… dead end there.\nRunning a server to do a git pull, commit, and push was an option… but it seemed overly cumbersome for the goal. Nevermind that I don’t really want to manage a whole server just for this, and the costs would break the current “willing to spend” budget of zero dollars.\nCloud Functions fit the bill for the front-end API layer (and has a generous free tier), but there’s not an easy way to run the hugo or git commands from within node.\nA short term managed vm that runs a few command line operations… sounded a lot like Container Builder to me. That said, the operations would change each time depending on the post type and other runtime information, so is there a way to dynamically build the instructions and then send them to Container Builder? Why yes there is. But the data will probably be on multiple lines… and take it from someone who beat their head against the wall on this for several hours that Container Builder just doesn’t play nice with newlines in commands.\nSo I opted to write the payload to Cloud Storage first. In retrospect, we could’ve probably used PubSub for this too, but GCS came to my mind first.\nI’ll also add that the current nodejs client library doesn’t include Container Builder. My initial setup just used raw http requests to the API, but there’s an npm module that wraps up the functionality a little more neatly. I’d recommend using it until the offical library catches up, since it handles all the authentication stuff without extra headache."
  },
  {
    "objectID": "posts/creating-a-post-api-for-hugo/index.html#actually-building-it",
    "href": "posts/creating-a-post-api-for-hugo/index.html#actually-building-it",
    "title": "Creating a POST API for Hugo",
    "section": "Actually Building It",
    "text": "Actually Building It\nNow I didn’t really know anything about node and I had never deployed anything on Cloud Functions or Lambda before… so I leaned pretty heavily on the tutorials to help with the framework of what I was doing. I grasped it shouldn’t be that hard to take a request, fire a process, and return a reponse… but never underestimate the stupidity of a new user. I did find a few things that I think are worth mentioning:\n\nCloud Shell is Really Good for Functions Development\nSomething that went surprisingly well was doing the development in Cloud Shell. Not only does the Cloud Functions emulator come baked into it without any effort, but the editor also has fairly decent intellisense around Javascript. I wouldn’t say it felt like home… but it felt like an office I could be productive in (especially since my home computer was dying a slow death… though that’s a story for another day).\n\n\nPutting Off Authentication by… Borrowing?… an Auth Token from gcloud\nA terrible hack I used before I finally grasped how the authentication strategy worked was to model out the request I wanted to make in postman, use the command:\ngcloud config config-helper --format='value(credential.access_token)'\n… to get an access token and throw it in the Postman headers like so:\nAuthorization: Bearer bigLONGgobbledygookSTRINGthatWAStheTOKENfromGCLOUD\nWas it wise? Was it proper? Did it expire every hour? No, no, and yes… but it was good enough for me to iterate on the build object a few times (the interesting part) while putting off the authentication (yawn) until later.\n\n\nContainer Builder Odditites\nI mentioned earlier that newlines and Container Builder don’t mix. I cannot emphasize how many ways I tried to avoid the GCS workaround by keeping the content in the buildfile… but I think it ultimately just isn’t doable.\nOn the bright side, sed, awk, perl, and a number of other commands work exactly as you would expect in Container Builder, assuming your Linux fu is up to par. Mine is not, and I found sed frustrating, awk a bit limited for the free text files hugo generated, and perl to be a good balance. sed also had trouble with multiline, as did dd, which I tried after digging deeper and deeper into Stack Overflow and praying to Linus. My prayers were unheeded, but perl worked in the end.\nI’ll also add that pipes, &gt;&gt;’s, and other standard linux redirection tools simply do not work in Container Buidler. I imagine this is by design and makes sense when I think about it, but in practice that means you either need a command that takes those concepts into its api (thanks perl!) or work with a lot of intermediary files (without being able to redirect output on the command line.. and consider how many of those there are). I suppose I could’ve built containers that had each of these tools individually to use, but I’d already sourced an ubuntu container for hugo… so why make more?\n\n\nThe Google git Builder Had Commitment Issues\nI thought the easy part would be using the git builder provided by Google. It added files to staging brilliantly… but then it choked on commit, saying I needed to specify a user to commit with.\nNo problem, right? Good ’ole --author flag is there for you. Just add that and… it still gave the same error.\nA lot of digging later suggests that the author flag was working, but there’s a separate git config for the commit user, which is not set by the author flag. Fortunately, you can set this with the -c flag. So the step looks like this:\n{\n    \"name\": \"gcr.io/cloud-builders/git\",\n    \"args\": [\"-c\", \"user.name=\\\"David\\ \\Wynn\\\"\", \"-c\", \"user.email=\\\"Remixer96@gmail.com\\\"\", \"commit\", \"-m\", \"Test post\"]\n}\n\n\nThe End Result\nAll this led to the following object in code, which actually puts together the build object and fires it off.\nvar steps = [{\n        \"name\": \"us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\",\n        \"args\": [\"/usr/local/bin/hugo\", \"new\", short_filepath]\n    },\n    {\n        \"name\": \"gcr.io/cloud-builders/gsutil\",\n        \"args\": [\"cp\", \"gs://ftwynn-temp/content.txt\", \"tmp.txt\"]\n    },\n    {\n        \"name\": \"gcr.io/cloud-builders/gsutil\",\n        \"args\": [\"rm\", \"gs://ftwynn-temp/content.txt\"]\n    },\n    {\n        \"name\": \"us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\",\n        \"args\": [\"/usr/bin/perl\", \"-e\",\"open(OUT, '&gt;&gt;', '\" + filepath + \"'); print OUT while (&lt;&gt;);\" , \"tmp.txt\"]\n    },\n    {\n        \"name\": \"us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\",\n        \"args\": [\"/bin/rm\", \"tmp.txt\"]\n    },\n    {\n        \"name\": \"us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\",\n        \"args\": [\"/usr/bin/perl\", \"-pi\", \"-e\", \"!$x && s/CHANGEME/\" + title + \"/ && ($x=1)\", filepath]\n    },\n    {\n        \"name\": \"gcr.io/cloud-builders/git\",\n        \"args\": [\"add\", \".\",]\n    },\n    {\n        \"name\": \"gcr.io/cloud-builders/git\",\n        \"args\": [\"-c\", \"user.name=\\\"David\\ \\Wynn\\\"\", \"-c\", \"user.email=\\\"Remixer96@gmail.com\\\"\", \"commit\", \"-m\", \"Test post\"]\n    },\n    {\n        \"name\": \"gcr.io/cloud-builders/git\",\n        \"args\": [\"push\", \"https://source.developers.google.com/p/ftwynn-hugo-blog/r/hugo-blog\", \"master\"]\n    }];\n    \nvar buildsteps = {\n    \"source\": {\n        \"repoSource\": {\n            \"projectId\": \"ftwynn-hugo-blog\",\n            \"repoName\": \"hugo-blog\",\n            \"branchName\": \"master\"\n        }\n    },\n    \"steps\": steps\n};\n    \nbuilder.createBuild(buildsteps);\nThere’s some screener code at the top and debug at the bottom, but that’s the good stuff right there. You’ll note I changed the hugo archetype title to CHANGEME for easy replacement, and I’ll probably clean up some of the containers later since it takes 10 seconds or so to run now which is slower than I’d like, but it’s fine for the moment."
  },
  {
    "objectID": "posts/creating-a-post-api-for-hugo/index.html#adding-micropub-on-top",
    "href": "posts/creating-a-post-api-for-hugo/index.html#adding-micropub-on-top",
    "title": "Creating a POST API for Hugo",
    "section": "Adding Micropub on Top",
    "text": "Adding Micropub on Top\nSo, all of this worked, but then I needed to write a client that used it if I wanted to actually post things easily. The problem then, of course, is that I don’t know how to write a browser extension. I also don’t really want to write an authentication layer either. Fortunately, the IndieWeb community has come up with micropub.\nIn short, micropub is a standardized api for creating IndieWeb resources. More importantly, there is an extension already written (among others) that posts to it. Sold. What needed doing?\n\nSet Up IndieAuth\nFirst, I needed to clean up my IndieAuth markup on my homepage. It was mostly complete in that the rel=me links were present and working, but I didn’t have an authenticator or token service linked. I feared I would have to set up my own service, before discovering I could just use IndieAuth.com instead. Curiously, the Develpoer page of the IndieAuth site wasn’t very clear, but the token site definitely was. Add the IndieAuth links to the homepage. Add a link to the cloud function. Three lines.\n&lt;link rel=\"authorization_endpoint\" href=\"https://indieauth.com/auth\"&gt;\n&lt;link rel=\"token_endpoint\" href=\"https://tokens.indieauth.com/token\"&gt;\n&lt;link rel=\"micropub\" href=\"https://us-central1-ftwynn-hugo-blog.cloudfunctions.net/function-1\"&gt;\nDone. What next?\n\n\nVerify the Auth in the Cloud Function\nI was using a secret passphrase until now, so I needed to change the function to call the token service and verify a client’s identity.\n// Verify Authorization\nvar options = {\n    url: \"https://tokens.indieauth.com/token\",\n    mathod: \"GET\",\n    headers: {\n        \"Authorization\": bearer,\n        \"Accept\": \"application/json\"\n    },\n    json: true\n};\n\nrequest.get(options, (err, response, body) =&gt; {\n    if (err) { return console.log(err); }\n    console.log(\"Response from IndieAuth Token:\");  \n    console.log(body);\n    if (body.me !== \"http://www.ftwynn.com/\") {\n        res.status(401).send('Please authenticate this client with IndieAuth');\n        return;\n    }\n});\nNothing too bad there either. Change a few names in the function’s parsing logic and BAM, Omnibear now lets me post thoughts to my website from any browser. Pretty cool, and more importantly, pretty low effort."
  },
  {
    "objectID": "posts/creating-a-post-api-for-hugo/index.html#the-future",
    "href": "posts/creating-a-post-api-for-hugo/index.html#the-future",
    "title": "Creating a POST API for Hugo",
    "section": "The Future",
    "text": "The Future\nI’ll be exapnding the capabilties of the micropub Cloud Function in the next few weeks. Not sure how far I’ll get, but since I only pass one of the micropub tests so far, I imagine it’ll keep me busy for a while."
  },
  {
    "objectID": "posts/cicd-on-hugo/index.html",
    "href": "posts/cicd-on-hugo/index.html",
    "title": "CICD for Hugo: Speeding up the Static Site Flow",
    "section": "",
    "text": "As I was putting this site together, I realized there were some boilerplate workflows I wanted to improve.\nThe typical workflow for creating a post looked like this:\nMy goal was to speed this up a bit, hopefully making room in the future for a more api driven posting approach. That said, I was willing to start small by cutting out a few of the end steps first.\nMy first instinct was to find some sort of repo-sync tool for Cloud Storage. I would still have to build and commit the compiled site to the repo, but that would at least cut out the rsync part.\nUnfortunately, according to the almighty Stack Overflow, there was no dice to be had on that front. You’d still need a go-between server to do the rsync’ing somehow.\n… But after thinking about it a bit, I realized Google Cloud Container Builder could serve exactly that function. It spins up, runs commands, and then spins down. All controlled through a single config file. Limited hassle, limited fuss.\nI dove through the docs and it seemed straightforward enough. The source code gets auto-mounted to /workspace (which is the working directory as well). Each command is a docker container. And despite the name, you don’t actually have to build a container at the end of it, so rsync’ing to a bucket is fair game.\nA little more searching led to a tutorial that was just what I wanted… almost. That article just shows the rsync’ing part… but if Container Builder can already run commands, why should I rebuild the site on my machine before committing it?\nAll said, the new game plan looked like the following:\nAs demonstrated in the docs, Google provides a few cloud-builders out of the box, including gsutil… which is a big relief since I didn’t want to mess with authentication. However, there’s no pre-built binary for Hugo. To Docker Hub!\nSadly, there appears to be no official container for the Hugo project, and no one had an up to date container specifically for building the site (several wanted to build and serve). As a result I modified one of the Dockerfiles I found there, ending up with the following:\nIt seemed a little too hacky to post back to docker hub, so instead I just used the internal docker registry in my Cloud Project.\nThis led to a pretty straightforward cloudbuild.yaml file:\nAnd it worked! Huzzah! All was well… until I tried to switch themes. Then I got a weird error message in the logs:\nOn a closer look, I realized the new theme was being stored as a git binary in the repo, transparent where it needed to be on my machine but somehow not accessible on the build machine.\nAdding a git command to re-pull the theme in the builder seemed to fix it, leading to a final cloudbuil.yaml of:\nAside from adding a build trigger on every push to master, that’s all there was to it. I was pretty surprised how easy it was all told, and there’s a pretty generous allotment on the free tier for Cloud Builder, so I’m looking forward to tweaking it more in the future."
  },
  {
    "objectID": "posts/cicd-on-hugo/index.html#update",
    "href": "posts/cicd-on-hugo/index.html#update",
    "title": "CICD for Hugo: Speeding up the Static Site Flow",
    "section": "Update",
    "text": "Update\nI wasn’t satisfied with the extra git pull in the cloudbuild.yaml, so in the course of other investigations I took a deeper look, which led to this hugo issue.\nTurns out there are three ways to pull a theme into your site:\n\ngit clone\ngit submodule\ngit subtree\n\nAfter significant experimentation (and digging, because that 3rd option isn’t easy to find), I found that subtrees are the right answer from a Cloud Builder perspective. All the articles about using subtrees are overkill (and tend to presume you want to commit to both repos), but a decent one is here. I didn’t see a need to add the repo as a remote, just the subtree add command was fine for me.\nSo in the end, the cloudbuild.yaml is back to:\nsteps:\n  - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n    args: [\"/usr/local/bin/hugo\"]\n  - name: gcr.io/cloud-builders/gsutil\n    args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]"
  },
  {
    "objectID": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html",
    "href": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html",
    "title": "Challenges Showing Text From a Simple JS Function in Logseq",
    "section": "",
    "text": "There are some open source projects that are plain, simple, and describe well what they do. curl is the classic example (along with most Linux utilities), but File Converter is another. It does what it does, it doesn’t do what it doesn’t.\nAnd then, there is Logseq.\nAll I wanted to do is dynamically create some text from a javascript function that’s different every day. I feel this is doable in there somewhere, but I’m absolutely stumped trying to connect the dots from A to B to make it happen.\nLet’s consider the options:"
  },
  {
    "objectID": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-1-use-templates",
    "href": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-1-use-templates",
    "title": "Challenges Showing Text From a Simple JS Function in Logseq",
    "section": "Option 1: Use Templates",
    "text": "Option 1: Use Templates\nThe templating language in Logseq is pretty solid. I’m a particularly heavy user when it comes to creating my morning, evening, weekly, and monthly journal prompts.\nBut that was also what led me to my problem. I have a list of morning Journal prompts, one for each of the 366 days (don’t forget Leap Day) of the year. I’m always open to the best way to get this list in various tools, but the most universal path seems to be through a Javascript function. Either I host it locally, or set up a Cloud Function to return the correct prompt each day.\nBut in Logseq’s templating language there is no meaningful way to do a select or case or any other user defined function that I could find.\nSo… we explore."
  },
  {
    "objectID": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-2-use-plugins",
    "href": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-2-use-plugins",
    "title": "Challenges Showing Text From a Simple JS Function in Logseq",
    "section": "Option 2: Use Plugins",
    "text": "Option 2: Use Plugins\nPlugins are the typical first place a user looks when looking for enhanced functionality like this. So I did a little digging and came up with two options.\n\nSmartblocks\nSmartblocks seems like it might be able to make this work.\nThere’s an if clause it adds to templates that might suffice if I was willing to retool my JS function into this altered templating language. However, I think I would have to shove them all into the same block, and I’m pretty sure Logseq gets unhappy with blocks beyond a certain size.\nPlus, I would have to maintain two sets of prompt “functions” if I found any typos, which somehow keep cropping up in this giant JSON object I keep around.\n\n\nSmart Typing\nSmart Typing seems like it should be able to handle this… but ultimately I couldn’t figure it out.\nEven with an example of text replacement in gif form right in the docs, I couldn’t figure out how the trigger worked. The function never seemed to fire.\nPlus it started to screw up normal typing after a Logseq restart. Maybe function size was another hidden problem? Maybe I needed to register the function somehow? Maybe there were more instructions in the Chinese docs I couldn’t read?\nI can’t say for sure, so I searched on."
  },
  {
    "objectID": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-3-use-custom.js",
    "href": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-3-use-custom.js",
    "title": "Challenges Showing Text From a Simple JS Function in Logseq",
    "section": "Option 3: Use custom.js",
    "text": "Option 3: Use custom.js\nLogseq has the ability to add in native Javascript from a custom.js file in the logseq directory.\n… I couldn’t find any official documentation for it at all.\nMost of the examples in the forums are people manipulating other behavior of the app rather than adding simple strings. Clearly there’s some sort of merging between DOM and data that needs to happen… but I couldn’t find a full explainer anywhere that would shed any light on it.\nWhich meant it was time to…"
  },
  {
    "objectID": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-4-give-up-and-use-an-iframe",
    "href": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#option-4-give-up-and-use-an-iframe",
    "title": "Challenges Showing Text From a Simple JS Function in Logseq",
    "section": "Option 4: Give Up and Use an iframe",
    "text": "Option 4: Give Up and Use an iframe\nI already have a simple html page with a working prompt. Why not just embed it in an iframe and copy + paste the output into Logseq?\nDefinitely not what I would consider ideal, but given that previously I had to bounce around between different windows (and even workspaces on Chromebook… don’t get me started) to get the prompt previously, this is at least a meaningful improvement."
  },
  {
    "objectID": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#my-wish-more-logseq-docs-on-the-fiddly-bits",
    "href": "posts/challenges-showing-text-from-a-simple-js-function-in-logseq/index.html#my-wish-more-logseq-docs-on-the-fiddly-bits",
    "title": "Challenges Showing Text From a Simple JS Function in Logseq",
    "section": "My Wish: More Logseq Docs on the Fiddly Bits!",
    "text": "My Wish: More Logseq Docs on the Fiddly Bits!\nI see all over the forums for Logseq users to avoid the fiddly parts and to stick with the simple tools. It’s excellent advice, and echoes words I’m currently writing for other posts about Advanced Queries and Solutioning in Logseq.\n… but the Docs on how to use things which visibly pop up in menus should exist somewhere. Otherwise you get semi-capable users like myself wandering around lost for way longer than necessary, only to fallback on a non-ideal solution.\nIf anyone has any other ideas (or can point to docs I missed), shoot me an email below!"
  },
  {
    "objectID": "posts/can-humanity-change/index.html",
    "href": "posts/can-humanity-change/index.html",
    "title": "Can Humanity Change?",
    "section": "",
    "text": "One of the teachings of Stoicism is that humanity doesn’t fundamentally change. The drama and squabbles we see today are fundamentally the same drama and squabbles we see from ancient times. People were kind and people were petty. People focused on acquiring good and gaining status. People shirked those things to try and find meaning. People loved their families and hated their memories.\nIt’s a lesson I struggle with somewhat  Because I want to believe that humanity can grow and be more than we were. I want to believe that the narrative warnings of 1984 and Brave New World will become obsolete, instead of cyclically relevant. I want to believe that tomorrow will be better than today.\nIn some ways, it has been, which seems to challenge the Stoic notion. People die less. We’re all better fed. Children survive to higher ages. Etc. Etc.\nBut I’m coming to the conclusion that we do so because our nature changes very slowly (if at all), but our environment in the form of institutions can change, and people respond to changes in their environment.\nIt makes the progress we’ve made unfortunately fragile. Living in the USA right now and watching the intentional destruction of institutions built to guardrail behavior is a sad reminder of this. But on the other side, it does suggest that if we build stronger institutions that dampen our worst impulses, and make them resilient with plain and apparent justifications, examples, and wisdom, then we just might be able to do be better.\nI don’t think we’re learning the right lessons at this moment, but I do feel that it’s still possible."
  },
  {
    "objectID": "posts/being-the-worst-at-obsidian-can-make-you-better-than-youve-ever-been/index.html",
    "href": "posts/being-the-worst-at-obsidian-can-make-you-better-than-youve-ever-been/index.html",
    "title": "Being the worst at Obsidian can make you better than you’ve ever been",
    "section": "",
    "text": "As I was working on puling together a weekly review for myself and exploring what a CRM in Obsidian might look like, I had a realization that I think is worth repeating:\nBeing “bad” in Obsidian and doing something “wrong” is the correct way to go about things.\n\nThere are many systems out there that are more opinionated than what is essentially a wiki. There are plenty of project/productivity/graph drawing/etc tools that are all more specialized at what they do and can put prettier UI’s on things with more one-click buttons.\nBut the hidden value of doing something poorly in Obsidian, rather than the default way somewhere else, is that you get to make it just what you want.\nTake CRM. Dave Sivers in his book Your Music and Your People doesn’t even talk about using an app, but just calls it a database that you should use to help stay connected to people. What’s a better people database than one that matches exactly what you want to capture?\nSure Obsidian does some things better than others. Fields are easy. Tags are easy. Journaling is easy. TODOs are easy. Connections are easy. Updates are… just as tedious as other systems. While on the other hand its connections to social and ability to mail merge are definitely lacking.\nBut you know what? You probably don’t need most of that stuff.\nStarting from a blank text file forces you to pick the most important things first. That in itself is already key. Without toying with a few ideas on your own first, you might gravitate toward the prettiest or most/least expensive tool, even if it’s not right for you.\nThe plugin ecosystem gives you a tremendous leg up for specifics, but an Obsidian plugin will never beat a polished alternative at that use case. The Tasks plugin will never be Todoist. This is a good thing.\nThe rough edges are your personal feedback for knowing what’s working and what isn’t. Treasure that feedback.\nOnce you dive into the mindset that being bad (or at least starting bad) is the point, there’s a lot of power that’s unlocked to you.\nDive in, do something poorly, then tweak. It’s more fun, and more effective than aiming for perfection from the outset."
  },
  {
    "objectID": "posts/basb-observations-deadlines-for-projects-seem-weirdly-unhelpful/index.html",
    "href": "posts/basb-observations-deadlines-for-projects-seem-weirdly-unhelpful/index.html",
    "title": "BASB Observations: Deadlines for Projects Seem Weirdly Unhelpful",
    "section": "",
    "text": "As I’m working on integrating BASB more and more in my life, I’m noticing that I’m handling the tasks alright, but the deadlines on projects seem artificial and surprising when they come up.  I find that trying to manage lots of smaller projects (which I think is the intent of BASB) means that there are lots of deadlines which I somehow am supposed to care about, which I can’t really bring myself to do. It’s different when the deadline is a real hard stop, but that’s rarely the case for the projects I’m currently pursuing.\nAs such, I think I’m going to shake up the TODO tracking into a more Kanban flow, focusing on a firmer Work In Progress limit, forcing some prioritization. We’ll see if the projects take care of themselves beyond that.\nI was going to jump to a real Kanban tool to do this, but Todoist already has all my tasks and is almost set up for this anyway, so I’m trying that implementation this week."
  },
  {
    "objectID": "posts/basb-observations-deadlines-for-projects-seem-weirdly-unhelpful/index.html#new-setup",
    "href": "posts/basb-observations-deadlines-for-projects-seem-weirdly-unhelpful/index.html#new-setup",
    "title": "BASB Observations: Deadlines for Projects Seem Weirdly Unhelpful",
    "section": "New setup",
    "text": "New setup\n\nTasks are in Todoist in various projects\nA filter brings in the things scheduled for today (and limits my daily tasks to the ones coming up within 3 hours)\nI use a CSS trick to hide everything in this list past the 5th item, so I’m only focusing on those things (which should be the due and high priority items)\n\n\nCurrent Today Filter:\n((overdue | due before: +3 hours) & (#Daily Habits | #Repeated Tasks)) | ((overdue | due today) & ! (#Daily Habits | #Repeated Tasks) )\nInterpreted left to right:\nGive me anything in my Daily Habits or Repeated Tasks lists that’s overdue or coming up in 3 hours, and give me anything due today or earlier that’s not in those projects.\n\n\nCSS Trick for Work in Progress Limit\n.task_list_item:nth-of-type(1n+6) {     display: none !important; }\nIt’s a weird notation in CSS. You need to change the 6 to 1+whatever limit number you want."
  },
  {
    "objectID": "posts/back-to-iphone-after-12-years/index.html",
    "href": "posts/back-to-iphone-after-12-years/index.html",
    "title": "Back to iPhone After 12 Years",
    "section": "",
    "text": "This past Memorial Day weekend I woke up to my own Groundhog Day-style disappointment. My Pixel 4 XL’s battery had stopped holding a charge… again… on a third device.\nWorking in technology, I’m used to having things break. I’ve also been a big Android user since the release of the Motorola Droid, sticking with the OS through a fair share of warts and growing pains. But when my phone broke last week in the same way as my other two Pixel devices, causing a Monday morning scramble to the store, I decided maybe it was time to be less of a tinkerer and more of a user again.\n… at least when it comes to phones.\nTo help get used to the publishing flow on my blog, I’m going to note some of my thoughts here for others to chew on (and spit at) if they’re so inclined. I’ll admit upfront I did fairly minimal homework, thinking my years at big tech companies and affinity for tinkering would get me through any adjustment pains.\nSome things have been smooth. Some have been choppy. Some are mystifyingly difficult. It reminds me a lot of when I had a Mac laptop actually.\nAs a general rule, a few weeks in now, I can feel the stability I traded for. I’m still frustrated by some limitations, but I think it’s been the right call so far.\nI just have to come to terms with the fact that I’m now just a user… and be OK with that."
  },
  {
    "objectID": "posts/abstinence-is-not-the-only-form-of-self-control/index.html",
    "href": "posts/abstinence-is-not-the-only-form-of-self-control/index.html",
    "title": "Abstinence is Not the Only Form of Self-Control",
    "section": "",
    "text": "When it comes to the Stoic virtue of Self-Control, our minds often turn to its most harsh form.\nAbstain from this. Cut off that. Completely avoid this. Abandon that.\nOften this advice has its merits. However, for those of us just starting on the Stoic journey, or who are working our way back from very ingrained habits, it’s worth remembering that scaling is also a valid approach to self-control.\nInstead of binging on a whole pizza, take it down to half, or just a slice or two. Instead of a whole cake or pie, take one piece. Instead of a whole cookie, cut it in half. Instead of a whole bottle, just have a glass.\nThis is still progress, especially if we reflect on: 1. What brought us to the moment where we want to indulge 2. How we feel while we’re in that moment\nThere’s no need to feel like a failure because we don’t stop something all at once.\nBuilding the muscle of discipline takes time, and curbing our indulgences to less is still strictly better than letting them run amok, unchecked."
  },
  {
    "objectID": "now/index.html",
    "href": "now/index.html",
    "title": "Now",
    "section": "",
    "text": "Tip\n\n\n\nWondering what is this? Read the explainer from Derek Sivers.\n\n\nCurrently I’m at the phase of life where time is short, professional opportunities are large, and my family demands every ounce of attention I can give them.\nI’ve been thinking a lot about how I want the day to day of the next few decades of my life to go across a range of different areas. That’s led to active experimentation around new professional skills, new fitness routines, seeing friends more often, reading more books, fewer video games (sadly), more intentional consumption of art (starting with comics), and integrating more philosophy into my routine.\nMost recently I’m starting a new role at a new startup. I’m looking forward to the adventure."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Everything FTWynn… All at Once",
    "section": "",
    "text": "TestGuild DevOps Toolchain Podcast 2024-03\n\n\n\nTechnology\n\n\nRecordings\n\n\n\n\nMar 14, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCisco DevNet 2023-10\n\n\n\nTechnology\n\n\nRecordings\n\n\n\n\nOct 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Evolution of Observability Practices 2023 10\n\n\n\nTechnology\n\n\nRecordings\n\n\n\n\nOct 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings Left Unimplemented… and I’m Unsure if I Ever Will\n\n\n\nPersonal Knowledge Management\n\n\nBuilding My BASB in Emacs\n\n\n\n\nJun 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy BASB Implementation in Org Mode v2023-06\n\n\n\nPersonal Knowledge Management\n\n\nBuilding My BASB in Emacs\n\n\n\n\nJun 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat Makes Org Mode Hard for PKM\n\n\n\nPersonal Knowledge Management\n\n\nBuilding My BASB in Emacs\n\n\n\n\nJun 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShould You Choose Org Mode?\n\n\n\nPersonal Knowledge Management\n\n\nBuilding My BASB in Emacs\n\n\n\n\nJun 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMy Path to Org Mode\n\n\n\nPersonal Knowledge Management\n\n\nBuilding My BASB in Emacs\n\n\n\n\nJun 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou Are Not Your Lowest Point\n\n\n\nPhilosophy\n\n\n\n\nMar 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbstinence is Not the Only Form of Self-Control\n\n\n\nPhilosophy\n\n\n\n\nMar 6, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow My Stoic Practice Paid Off\n\n\n\nPhilosophy\n\n\n\n\nMar 4, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChallenges Showing Text From a Simple JS Function in Logseq\n\n\n\nTechnology\n\n\nPersonal Knowledge Management\n\n\n\n\nMar 3, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode as an MD Editor\n\n\n\nTechnology\n\n\n\n\nMar 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Unofficial Partner Podcast - Episode 288\n\n\n\nGames\n\n\nRecordings\n\n\n\n\nJan 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nThe Seasons of TODO Systems\n\n\n\nPersonal Knowledge Management\n\n\n\n\nJan 16, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWhat the DnD Community Needs in Light of the OGL and ORC\n\n\n\nTabletop Role Playing Games\n\n\n\n\nJan 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nDimension 20 - Neverafter - First Impressions\n\n\n\nTabletop Role Playing Games\n\n\n\n\nJan 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuild Inclusive Online Communities at Scale With Advanced Language AI 2022-12\n\n\n\nGames\n\n\nTechnology\n\n\nRecordings\n\n\n\n\nDec 14, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nFirst Thoughts on Pokemon Unite\n\n\n\nGames\n\n\n\n\nJul 24, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nBeing the worst at Obsidian can make you better than you’ve ever been\n\n\n\nPersonal Knowledge Management\n\n\n\n\nJul 17, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started with Zettelkasten\n\n\n\nPersonal Knowledge Management\n\n\n\n\nJul 12, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nDid I Mention the Pace of Development in Obsidian was Ludicrous Speed?\n\n\n\nPersonal Knowledge Management\n\n\n\n\nJun 20, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nMagSafe on iPhone is Wonderful and Should be a Wider Standard\n\n\n\nTechnology\n\n\n\n\nJun 20, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nHidden UI Elements are Bad\n\n\n\nTechnology\n\n\n\n\nJun 17, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nInterstitial Journaling in Obsidian with a Stripped-Down QuickAdd\n\n\n\nPersonal Knowledge Management\n\n\n\n\nJun 15, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nBack to iPhone After 12 Years\n\n\n\nTechnology\n\n\n\n\nJun 7, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nCareer Advice for Students at Duke\n\n\n\nDec 30, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nChromatic Harmonica: First Thoughts\n\n\n\nMusic\n\n\n\n\nAug 23, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nThe First Bend Reconsidered: I Don’t Think I Want This\n\n\n\nMusic\n\n\n\n\nAug 15, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nThe First Bend: It Has Happened\n\n\n\nMusic\n\n\n\n\nAug 14, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nDimension 20 - A Crown of Candy - Finale pt. 2\n\n\n\nTabletop Role Playing Games\n\n\n\n\nAug 8, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Power of “You Are Here”\n\n\n\nPhilosophy\n\n\n\n\nAug 6, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nMaking Harmonica Tabs: The Easiest Way I’ve Found So Far\n\n\n\nMusic\n\n\n\n\nAug 6, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nHarmonica Week 02\n\n\n\nMusic\n\n\n\n\nAug 2, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCan Humanity Change?\n\n\n\nPhilosophy\n\n\n\n\nJul 31, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nDimension 20: A Crown of Candy Finale Part 1\n\n\n\nTabletop Role Playing Games\n\n\n\n\nJul 31, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nHarmonica Week 01\n\n\n\nMusic\n\n\n\n\nJul 28, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nBASB Observations: Deadlines for Projects Seem Weirdly Unhelpful\n\n\n\nPersonal Knowledge Management\n\n\n\n\nJul 25, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOne of the Nice Things About Stoicism\n\n\n\nPhilosophy\n\n\n\n\nJun 1, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nBASB Experiments: Better Project Management in Todoist\n\n\n\nPersonal Knowledge Management\n\n\n\n\nMay 23, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nDimension 20 - A Crown of Candy Episode 6 Notes\n\n\n\nTabletop Role Playing Games\n\n\n\n\nMay 19, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nI Love Stylish\n\n\n\nTechnology\n\n\n\n\nMay 18, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nThoughts on Dropout’s A Crown of Candy\n\n\n\nTabletop Role Playing Games\n\n\n\n\nMay 10, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nPocket vs. Instapaper\n\n\n\nPersonal Knowledge Management\n\n\n\n\nMay 7, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nBASB: The Story So Far\n\n\n\nPersonal Knowledge Management\n\n\n\n\nMay 7, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nKeeping the Most Important Problems Top of Mind\n\n\n\nPersonal Knowledge Management\n\n\n\n\nApr 30, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nMoving to Write.as\n\n\n\nTechnology\n\n\n\n\nApr 28, 2020\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelling Skepticism Like It’s Your Job at DragonCon’s 2019’s Skeptrack\n\n\n\nPhilosophy\n\n\nProductivity\n\n\nRecordings\n\n\n\n\nAug 30, 2019\n\n\n\n\n\n\n\n\n\n\n\n\nCreating a POST API for Hugo\n\n\n\nTechnology\n\n\n\n\nDec 29, 2017\n\n\n\n\n\n\n\n\n\n\n\n\nAdvice for New Parents\n\n\n\nParenting\n\n\n\n\nDec 20, 2017\n\n\n\n\n\n\n\n\n\n\n\n\nWhat Makes A Good Star Wars Movie\n\n\n\nDec 18, 2017\n\n\n\n\n\n\n\n\n\n\n\n\nCICD for Hugo: Speeding up the Static Site Flow\n\n\n\nTechnology\n\n\n\n\nNov 25, 2017\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "me/index.html",
    "href": "me/index.html",
    "title": "David Wynn",
    "section": "",
    "text": "People &lt;&gt; Machine Liaison | Organization Builder\n\n\n    \n    Below is a little information about me, all machine readable (assuming it supports reading h-cards).\n    I like working with technology and people... and I spend most of my time trying to bridge the gap between them. Sometimes that means explaining the potential of different technologies, while other times it means tinkering with prototypes and half-baked ideas. Other times I can be found reading about various non-fiction topics, hanging out with my family, dabbling in creative projects of my own, or just playing video games.\n    \n    Name: David Wynn\n    Twitter\n    Mastodon\n    Facebook\n    LinkedIn\n    Github"
  },
  {
    "objectID": "posts/2024-03-27-selling-skepticism-like-its-your-job-at-skeptrack-2019/index.html",
    "href": "posts/2024-03-27-selling-skepticism-like-its-your-job-at-skeptrack-2019/index.html",
    "title": "Selling Skepticism Like It’s Your Job at DragonCon’s 2019’s Skeptrack",
    "section": "",
    "text": "Recorded in Atlanta, GA on August 30th, 2019.\nRecording of my talk at DragonCon 2019 (Thank you Skeptrack A/V Team!) with re-balanced audio. Apologies for the missing first few minutes of the talk. The deck with speaker notes can be found here:\nhttps://docs.google.com/presentation/d/1KFfi71_CgU5HrihBkV8qqn-TNVFAfZzHaMpxm3FucZo/edit#slide=id.p"
  },
  {
    "objectID": "posts/2024-03-27-selling-skepticism-like-its-your-job-at-skeptrack-2019/index.html#alternate-recording",
    "href": "posts/2024-03-27-selling-skepticism-like-its-your-job-at-skeptrack-2019/index.html#alternate-recording",
    "title": "Selling Skepticism Like It’s Your Job at DragonCon’s 2019’s Skeptrack",
    "section": "Alternate Recording:",
    "text": "Alternate Recording:"
  },
  {
    "objectID": "posts/2024-03-27-selling-skepticism-like-its-your-job-at-skeptrack-2019/index.html#dragoncon-title-and-description-as-published-in-the-convention-guide",
    "href": "posts/2024-03-27-selling-skepticism-like-its-your-job-at-skeptrack-2019/index.html#dragoncon-title-and-description-as-published-in-the-convention-guide",
    "title": "Selling Skepticism Like It’s Your Job at DragonCon’s 2019’s Skeptrack",
    "section": "DragonCon Title and Description as Published in the Convention Guide",
    "text": "DragonCon Title and Description as Published in the Convention Guide\nSelling Skepticism Like It’s Your Job: Using a Process to Make Progress\nCould we be spreading skepticism more effectively? How do we know where we might be going wrong? Come listen to how professional sales people map out the process of convincing others and how to use it to help spread skepticism in your own life."
  },
  {
    "objectID": "posts/advice-for-new-parents/index.html",
    "href": "posts/advice-for-new-parents/index.html",
    "title": "Advice for New Parents",
    "section": "",
    "text": "As more and more of my friends hit the age where they seriously debate and then start having kids, I thought I would share what meager advice I’ve accumulated so far in my first few months of being a father.  Disclaimer: I am obviously new at this, and reserve the right to change this at any point in time. Some of these I have also gained from others, so I can’t take full credit for everything here."
  },
  {
    "objectID": "posts/advice-for-new-parents/index.html#advice",
    "href": "posts/advice-for-new-parents/index.html#advice",
    "title": "Advice for New Parents",
    "section": "Advice",
    "text": "Advice\n\nTreat your first kid like it’s your second\nThe tough part about being a parent the first time around is it’s new, and all the advice you get in every direction is about being cautious and safe… but if you try to follow everyone’s most cautious examples you will absolutely back yourself into a hole. So take some reasonable precautions, but have some faith in the fact that humans have been having kids for generations and most of them turn out fine no matter what you do.\nIs your kid rolling over soon enough? Gripping things hard enough? Saying enough proto words? Don’t worry. They’ll probably all be fine. From a class we took in baby safety:\n\n“Kids survive in spite of their parents, not because of them.”\n\n\n\nUse the hospital nursery if offered\nThis is your first test for the point above. You might have a romanticized version of what your first night with your baby will be like. You might dread it like an inescapable plague. If your hospital offers a nursery, USE IT. The nurse at our hospital mentioned that few first time parents make use of it, but you’ll need that rest and you should take advantage of the help if you can.\n\n\nGet a night nurse if you can afford it\nThis is an expensive choice, but there are few times in life where you can genuinely purchase sleep. This is one of them. Even if you’re breastfeeding, the ability to have someone else prep everything, bring the baby to you, and then take it away and soothe it if food isn’t what it wants is amazing.\nNever underestimate the value of sleep.\nI will also add here the sleep training book that worked for our kid. I bought it solely based on the title, and not only did our night nurse and pediatrician approve, but it delivered on its promise. Twelve Hours’ Sleep by Twelve Weeks Old: A Step-by-Step Plan for Baby Sleep Success by Suzy Giordano\n\n\nBabies come in 3 stages: plant &gt; dog &gt; child\nI have to give a friend credit for this, but when a kid is young and doesn’t do much… it gets to be a real chore. Remembering that this is the plant phase, where you basically water the kid and wait, helps re-frame your mind to not expect too much when they can’t really do anything interesting.\nThat said, plant makes it sound like the kid is a sunflower… when they’re really a bit more like a mandrake. The screaming can be very real.\nThey graduate from there to dog… running around with a mild sense of reason and understanding basic commands… but not much beyond that.\nThen they get language and become a child, asking why about everything and saying I love you and stuff.\nI’m currently somewhere between the plant and dog stage, so I’ll have to update this post if I have any insights in the later phases."
  },
  {
    "objectID": "posts/advice-for-new-parents/index.html#gifts-for-new-parents",
    "href": "posts/advice-for-new-parents/index.html#gifts-for-new-parents",
    "title": "Advice for New Parents",
    "section": "Gifts for new parents",
    "text": "Gifts for new parents\nNot everyone is a new parent… sometimes they’re buying a gift for one. Here are my suggestions that might not be obvious.\n\nNight Nurse hours\nI mentioned this above, and because it’s expensive you might not be able to give much, but that’s basically sleep you’ve bought the parents. Is there a greater gift than that?\n\n\nCollections of crazy mommy blog/forum posts that turned out fine\nThis is true for pregnancy as well, but most first time parents will be a little nervous about food safety or material safety at one point or another. Fortunately there are tons of mom blogs and forums where people share stories about things way worse than you would expect, and the kids turn out fine. Collecting these (links or full out copies) would be a good gift to help with peace of mind. Bonus points for hitting on issues the parents actively worry about (sprouts, hamburgers, beer, etc.).\n\n\nA premium Spotify subscription\nI never understood the value of a premium Spotify subscription until my child was peacefully listening to music, only to cry once commercials came on. Fastest $100 dollars I’ve ever lost.\n\n\nMundane things at 6+ months\nLots of people will gift things for newborns and infants, but few will gift at sizes 6+ months. If you want something practical, clothes or diapers in that size will do the trick."
  },
  {
    "objectID": "posts/basb-experiments-better-project-management-in-todoist/index.html",
    "href": "posts/basb-experiments-better-project-management-in-todoist/index.html",
    "title": "BASB Experiments: Better Project Management in Todoist",
    "section": "",
    "text": "Because I’ve been stuck on a Chromebook ever since I started the BASB course, mouse-oriented options for any tools have been particularly annoying to me. One place in particular: project management in Todoist.  I think Todoist is the best todo app given that I live in a Windows/Linux/Android/Chromebook world, but the keyboard options by default are a bit hit and miss. Even with the excellent enhanced keyboard extension, there are some particular gaps around project management.\nWhy? A quick review:"
  },
  {
    "objectID": "posts/basb-experiments-better-project-management-in-todoist/index.html#the-project-management-hierarchy-in-todoist",
    "href": "posts/basb-experiments-better-project-management-in-todoist/index.html#the-project-management-hierarchy-in-todoist",
    "title": "BASB Experiments: Better Project Management in Todoist",
    "section": "The Project Management Hierarchy in Todoist",
    "text": "The Project Management Hierarchy in Todoist\nTo start, I’m ignoring tags for this analysis. It’s possible (and some do recommend) to make a tag based hierarchy for project management, but I find that not a good use case for tags, which are character limited with no spaces.\nThere are four hierarchical levels of project management in Todoist:\n\nProjects\nSub-projects\nSections\nSub-tasks\n\nProjects are obviously the intended abstraction, given that they show up in the UI in various searches and layouts. Sub-projects also do this, with the only difference being the nesting in the project list (and thus making them not totally re-orderable).\nThe main drawback with Projects is that there is no keyboard interface for making/editing them. There is the ability to make a new one in the Quick Add bar with #, but then you’re limited to no spaces and have to go into the UI to change the color anyway. The enhanced shortcut extension is no help here, I imagine suffering from a lack of any element to plug into.\nSections are interesting alternatives. They are fairly easy to create with the keyboard, and allow for moving around groups of tasks to different projects. However, they have similar no-keyboard drawbacks, and aside from expanding/collapsing they don’t provide much else in the UI that’s helpful.\nSub-tasks are nested tasks. You can expand/collapse them as well, and are otherwise exactly like normal tasks."
  },
  {
    "objectID": "posts/basb-experiments-better-project-management-in-todoist/index.html#how-ive-been-making-do-so-far",
    "href": "posts/basb-experiments-better-project-management-in-todoist/index.html#how-ive-been-making-do-so-far",
    "title": "BASB Experiments: Better Project Management in Todoist",
    "section": "How I’ve Been Making Do So Far",
    "text": "How I’ve Been Making Do So Far\nSo far, I’ve been using Projects as intended, but the workflow of BASB implies that there should be lots of movement around projects. I noticed that once I built them, I was reluctant to edit them as I probably should have. Using the trackpad and scrolling felt clunky.\nI did like my approach to due dates, which was to add a non-checkbox task (end a task with a colon) at the top of every project with the outcome as text and a scheduled due date. That let me set up a separate filter just to see project outcomes and due dates, which was functionally a way to view them all at once.\nIt wasn’t perfect… outcomes aren’t project names, which is what I really wanted to see, and the priority still matters for ordering, though it’s hidden on non-checkbox tasks, which is annoying… but it was good enough."
  },
  {
    "objectID": "posts/basb-experiments-better-project-management-in-todoist/index.html#what-im-experimenting-with-this-week",
    "href": "posts/basb-experiments-better-project-management-in-todoist/index.html#what-im-experimenting-with-this-week",
    "title": "BASB Experiments: Better Project Management in Todoist",
    "section": "What I’m Experimenting with This Week",
    "text": "What I’m Experimenting with This Week\nThis week I’m going to toy with making tasks projects, and sub-tasks the main area of focus. This should give a lot of the keyboard flexibility, allow for clear project name viewing in the overview, and more or less keep all the previous functionality.\nAn interesting think to consider is: what do Projects actually become under this model? There could just be a single Project with all the others in it, allowing for moving around. They could turn into areas. Or they could stay as meta-project containers. I’ll experiment with it and see how it goes."
  },
  {
    "objectID": "posts/basb-the-story-so-far/index.html",
    "href": "posts/basb-the-story-so-far/index.html",
    "title": "BASB: The Story So Far",
    "section": "",
    "text": "I thought I’d start putting some of my BASB experiences back into the wild. I’m aiming for once every two days, since I’m currently trying to interview for a promotion and watch my two year old while staying with my in-laws for an increasingly indefinite period of time.\nWhere was I? Right! BASB!\nMy first post comes on the last day of the course, because I wanted to document how much my attitude and system changed just over a few weeks."
  },
  {
    "objectID": "posts/basb-the-story-so-far/index.html#the-beginning-org-mode-or-die",
    "href": "posts/basb-the-story-so-far/index.html#the-beginning-org-mode-or-die",
    "title": "BASB: The Story So Far",
    "section": "The Beginning: Org Mode or Die",
    "text": "The Beginning: Org Mode or Die\nI started the course fully intending to use org-mode for anything and everything. It’s text based, future proof, open source, hackable… it even runs on my Chromebook (which is all I have at my in-laws). What more could you want?\nIt was easy enough to set up an initial PARA system. Tasshin’s blog already had some great ideas I could build on as well. I already had my life organized by Areas a few ways so the transition wasn’t too bad.\nHowever…\nA few things started to get tough:\n\nMoving files around the repo (a big part of flexible project planning) turned out to be tricky\nCreating directories and files had slightly different, annoying syntax\nInserting images was doable, but far from pleasant\nSyncing between work and home machines was going to be a tricky, manual process with git… and not possible at all really on mobile unless I set up a crazy Dropbox mirror thing…\nJust trying to capture notes from a web article created enough friction where I realized, at least while I’m on my Chromebook… this just wouldn’t work\n\nEverything was possible but… just so much work."
  },
  {
    "objectID": "posts/basb-the-story-so-far/index.html#moving-onto-the-defaults",
    "href": "posts/basb-the-story-so-far/index.html#moving-onto-the-defaults",
    "title": "BASB: The Story So Far",
    "section": "Moving onto the Defaults",
    "text": "Moving onto the Defaults\nThus we started with Evernote, and as soon as I’d made that decision 20 other problems I had with org-mode just vanished. So much is already plugged into Evernote, that friction practically vanished, and I found I had a heightened sensitivity to any that remained.\nThough I’d been a longtime Pocket user, I dove into Instapaper at Tiago’s recommendation… then I went back to Pocket… then back to Instapaper again. I’ll detail why in a future post.\nThen I set up Readwise, which in my opinion is a couple dollars too expensive… but it’s been so invaluable as a seamless glue layer, letting me bounce between Instapaper and Pocket that it’s probably worth me staying with them forever. I also just watched a deep dive on their tagging system (which blew my mind), and might be worth shaping my note taking habits around, at least a bit.\nMy big holes currently are podcasts and YouTube, where I just mark timestamps and links directly in Evernote. If I come across a better solution I’ll note it here."
  },
  {
    "objectID": "posts/basb-the-story-so-far/index.html#i-re-platformed-and-so-can-you",
    "href": "posts/basb-the-story-so-far/index.html#i-re-platformed-and-so-can-you",
    "title": "BASB: The Story So Far",
    "section": "I Re-Platformed and So Can You",
    "text": "I Re-Platformed and So Can You\nI’m sure org-mode is the right choice for many people who absolutely live in emacs and breathe around all its power. As a casual scripter, I found the web to be too varied for its limits, and I turned to tools more specialized in capture.\nIt took about a day… less time than I expected. Laying out PARA beforehand probably helped a good bit.\nIn the future, I’m wondering how much readwise will fill the role of randomnote as it grows. It clearly wants to, but it doesn’t import notes from Evernote… I’m content to leave it as glue (super glue perhaps) for now."
  },
  {
    "objectID": "posts/Build-inclusive-online-communities-at-scale-with-advanced-language-AI-2022-12/index.html",
    "href": "posts/Build-inclusive-online-communities-at-scale-with-advanced-language-AI-2022-12/index.html",
    "title": "Build Inclusive Online Communities at Scale With Advanced Language AI 2022-12",
    "section": "",
    "text": "https://www.bigmarker.com/VentureBeat/Build-inclusive-online-communities-at-scale-with-advanced-language-AI"
  },
  {
    "objectID": "posts/Build-inclusive-online-communities-at-scale-with-advanced-language-AI-2022-12/index.html#description",
    "href": "posts/Build-inclusive-online-communities-at-scale-with-advanced-language-AI-2022-12/index.html#description",
    "title": "Build Inclusive Online Communities at Scale With Advanced Language AI 2022-12",
    "section": "Description",
    "text": "Description\nTo create healthy online communities where people want to spend time, companies need better strategies for weeding out harmful posts. How do you break free of one-size-fits-all moderation techniques to stay ahead of harmful content and evolving language?\nDon’t miss this VB On-Demand event, where AI/ML experts from Cohere and Google Cloud get into the nitty gritty of managing user-generated content, from new innovations in natural language processing (NLP) models to state-of-the-art AI solutions. And you’ll learn how to build safer communities that thrive by addressing toxicity, reducing user churn, maintaining a good reputation – and how to scale moderation efforts without hiring more staff."
  },
  {
    "objectID": "posts/career-advice-for-students-at-duke/index.html",
    "href": "posts/career-advice-for-students-at-duke/index.html",
    "title": "Career Advice for Students at Duke",
    "section": "",
    "text": "One of my favorite ways to contribute to Duke is by talking with current students about their future careers. I always felt a little underserved by the career center, which seemed to be captured by the consulting and iBanking recruiting process, so I offer a different perspective to current students whenever I can. After speaking with dozens of undergrads, I found I had more to say than could typically be talked through in one sitting.\nSo, I thought I would publish my thoughts here to make my advice available to anyone with the link.\nI’ll start with some common assumptions that need correcting, give my suggestions for how to build a career, and then give a brief recap of how mine has been going for reference.\nThis advice is particularly targeted at Duke students, but hopefully there is enough here that students at other schools can apply it to their own situations as well."
  },
  {
    "objectID": "posts/career-advice-for-students-at-duke/index.html#correcting-assumptions",
    "href": "posts/career-advice-for-students-at-duke/index.html#correcting-assumptions",
    "title": "Career Advice for Students at Duke",
    "section": "Correcting Assumptions",
    "text": "Correcting Assumptions\n\nYour Major Is NOT Your Destiny… in Most Jobs it Honestly Doesn’t Matter\nA lot of students I talk to believe that their major dictates which job they can get. Or at least, it influences the choice to such a large degree that the major essentially dictates it (a sneaky mental trap designed to make your brain stop thinking about real alternatives). In my experience, this is nonsense.\nOf course, there are a handful of fields where your major does matter. Medicine, some flavors of hardcore engineering, etc… but this is far more the exception than the rule.\nI graduated with an Economics degree, which I did use in my first job as a econometrics forecaster… but no one else on my team had that major. When I got a job in Professional Services at a software company, we had people whose majors ranged from Chemical Engineering to Biomedical Engineering to Cognitive Science. “Are you good with computers and people? Welcome aboard!” The rest truly did not matter, and in many cases the diversity was an asset rather than a hurdle.\nSo pick a major you like and that challenges you, rather than one that maps to any particular career in your head. Your enthusiasm and the learning/researching skills you acquire will be more important than anything else, regardless of subject matter.\n\n\nThere Are TONS of Great Jobs Out There That You Have No Idea Exist\nBuilding off the idea above, there are a ginormous number of jobs in the world (many many more jobs than majors by a giant multiple), and most of them you probably don’t know about right now.\nThis cannot be overstated.\nEven if you think you did the homework, and “basically only these 2-3 jobs” amount to what you want, I can almost guarantee you missed at least several dozen entirely different careers in widely disparate fields.\nThe job I fell in love with is one I never heard about at Duke, Sales Engineer. It requires being able to talk to people, as well as thinking through technical problems and presenting solutions persuasively. It’s a great job for a number of reasons which I won’t go into in this article, but to stress the point, the career center never brought it up. The Strong Interest Survey never talked about it. I only discovered it by walking past a random booth at the Stanford career fair, getting asked an odd question, and talking to a guy wearing Aviator sunglasses for 10 minutes.\nUnfortunately, there’s no silver bullet for fixing this, but one thing that helps is thinking more about the skills and work that put you in flow state, then finding roles that need those skills. Designing Your Work Life has some great exercises that walk through this if you want to dig deeper.\nAdditionally, talk to as many real people as you can. The Alumni network is good for this, as are any regular humans you know in real life. Even if (and maybe especially if) someone’s story doesn’t seem interesting as a career, but it is strange, ask them about it. I have a friend who went from manufacturing microchips to designing toys to working on VR headsets and is now considering full time software engineering. Another went from physically prototyping other people’s random pipe dream designs to designing new features for the iPhone to managing the ins and outs of supply chains to and from China. Another was doing Professional Services work at a growing startup, only to leave and start a company doing the exact same work for that company, but now under his own enterprise he could control.\nPeople do an insane number of different things. Get interested in their paths and start asking them about it.\n\n\nBeware of the Consulting/iBanking Trap\nAs an Econ major, the Consulting/iBanking recruiting was pervasive, and was also an absolute trap. Their pitch is refined, and targeted directly toward undergrads’ fears. It goes like this:\n\nHey you! Are you smart and accomplished, but unsure about what you want to do with your life? Don’t worry about it! If you take this job, you won’t have to close any doors on any possibilities, because we work with all kinds of industries doing all kinds of smart stuff. Even more than you’d get if you picked just one industry! You’ll get to talk to important people and they’ll listen to you, because you’re smart! You’ll also get paid a bunch of money. Now we do work hard and play hard, but you’re not afraid of working hard, right? Sign up right here!\n\niBanking’s pitch is a little less about influence and a little more “trade your health, sanity, and life force for money” but it’s similar in its goal of selling you an easy choice with a flashing neon light pointing to the upsides and minimizing the very significant downsides.\nIn both cases I want to say this: the life force trade-off of working yourself to burnout is not worth the money. When those companies say they work hard and play hard, they’re leaning pretty heavily on the former to the point of non-existence of the latter. Or if it does exist, its with other people on the team who are trapped in the same work schedule and location as you are.\nBy contrast, I got a 9-5 job out of college at UPS headquarters. I didn’t know what to do with my free time… and it was great. I started dancing at a local studio, played a bunch of video games, and dug deeper in technology that I couldn’t at work because my desktop was heavily locked down.\nOne morning, I saw a friend who joined a consulting firm on the train. His head was hanging low and he looked barely awake when I recognized him. “Brian? Is that you? How’re you doing man?” He bolted upright like I’d hit him with a cattle prod and mumbled that he was good but working hard. Almost all the consultants I’ve met were this tired, and the really insidious part is: once you get that tired, it gets hard to see a way out. Buy whatever sofa and bed you want, you won’t feel rested until you quit.\nThere’s a reason the people leave those industries in droves, and it’s not because the new hires get what they need to be fulfilled humans. It’s because they get completely depleted and realize this isn’t how they want to live their life (more on that below).\n\n\nFollow Your Passion was Counterproductive Advice for Me, and Probably is For You Too\nOn the other end of the perspective, a lot is written about following your passion and doing what you love. It’s a great idea on paper. I even took some time off finding a job senior year to do a combined career center/CAPS program to help “find your dream job”.\nAfter months of tests and counseling with seemingly no end in sight, I finally asked outright, “So… what’s the take away from all of this?” I distinctly remember my counselor being caught a little off guard by the question. “Oh, well it seems you could be happy doing pretty much anything.” 3 months of wasted job hunting time for that nuggest of wisdom.\nAnyway, this whole philosophy is dangerous for a few reasons.\nFirst, in all likelihood, you do not have some innate sense of knowing what your true calling is inside of you. This is perfectly normal and OK. We all have things we like more and less, and those things don’t always sum up to a perfect job description. I never really knew what to do next in my career until I just took a leap and tried something different.\nSecond, even if you know yourself 100% through and through (an extremely high bar), whatever you think might be the perfect work for you… might be something no one pays for. What then? Are you doomed to be jobless forever? That doesn’t seem right.\nThird, it’s selfish. The follow your passion approach leads to only thinking about you and what you want… and that rabbit hole can lead to madness if you’re not careful. The world already has unfulfilled needs. You’ll naturally be better suited to help people with some needs over others, so start understanding that balance instead. You’ll be more satisfied focusing on helping others in the long run anyway.\nFourth, it’s not a useful career planning tool. It’s a single axis, simple assessment that doesn’t take into account realities like making rent and eating and health insurance and a family. It also doesn’t account for how you can grow and use influence to get more of what you want in a career, provided you plan correctly. All of those things are real world considerations that this simple version leaves out.\nFifth, and underrated in my opinion, following your passion can kill your joy. You might hope that mixing what you love with a paycheck will make everything wonderful. In my experience, it just turns what you love now into work… into a job… into a have to do instead of a get to do. This is not a wise way to live your life. Some passions are meant to just be passions, and that’s OK."
  },
  {
    "objectID": "posts/career-advice-for-students-at-duke/index.html#what-to-do-instead",
    "href": "posts/career-advice-for-students-at-duke/index.html#what-to-do-instead",
    "title": "Career Advice for Students at Duke",
    "section": "What To Do Instead",
    "text": "What To Do Instead\n\nThe One Book You Need\nCal Newport’s So Good They Can’t Ignore You is basically the one career book you need. It’s a practical, straightforward approach of doing something you’re good at, building career capital through that skill, and then leveraging that capital into doing more of what you want and less of what you don’t. Rinse and repeat.\nThe beauty of it is that it doesn’t really matter where you start so long as you start somewhere that moderately holds your interest. Invest in yourself and others, grow, and keep an eye out for where you might want to grow into next.\nI won’t rehash the rest of the book here. Just go read it.\n\n\nThe Guide Rails Come Off After College\nI do want to add something that can be very jarring after college: the guide rails of life come completely off.\nIt can feel like there’s a well-worn and expected path as you move through school and on to college. Get good grades. Get into a good school. Get more good grades. Get a degree. And then… well…\nAs soon as you leave the academic bubble that certainty of what the next best thing is just… disappears. You suddenly have to decide for yourself how you’ll make your way through life. Will you try to make a lot of money? Become famous? Work somewhere prestigious? Have an impact on a large group of people? Have a personal impact that you can see in someone’s eyes when they look at you? Spend time on close relationships?\nThere is no single, magical choice that will get you all of these things. Broadway stars still couch surf with their friends. There is good money to be made as a faceless cog in a corporate machine. Making a difference in a community comes with attracting attention, both positive and negative. Making a difference in the long term might alienate people from you in the short term. You have to choose the mix of benefits that work for you.\nAnd even if you do have a sense of what balance you want, there is no singular script to get you there.\nThere is no single way to get into a company you want to work for. There is no single way to get famous, Internet famous or otherwise. There is no single way to succeed in business. There is no single way to “achieve” and “win”.\nThis can be scary, but I want to emphasize that it’s also liberating, and worth embracing.\nPutting the above another way: There are multiple ways to get into a company you want to work for. There are multiple ways to get famous. There are multiple ways to succeed in business. There are multiple ways to “achieve” and “win”. With that framing, you have an even better chance to achieve what you want the way you want to.\nBy a similar token, there will be no one pushing you forward in your career like they did through school. In my own life, I got really good at my job multiple times, only to get stuck because I wasn’t leaning forward into the next thing and making it happen myself. Don’t make the same mistake I did and always keep in mind any job is just for now, and another option should be in mind for you as you go."
  },
  {
    "objectID": "posts/career-advice-for-students-at-duke/index.html#my-career-path-if-youre-curious",
    "href": "posts/career-advice-for-students-at-duke/index.html#my-career-path-if-youre-curious",
    "title": "Career Advice for Students at Duke",
    "section": "My Career Path, If You’re Curious",
    "text": "My Career Path, If You’re Curious\nI graduated from Duke in ’08 with a BS in Economics. I took several months off of looking for jobs during senior year to do a CAPS + career center program to figure out my dream job. This led to a completely wasted 3 months because the result was “you could be happy doing pretty much anything”. I frequented the career center for counseling and resume help.\nFor my first job in ’08. None of that mattered. I knew I was going to be in Atlanta, so I applied to several dozen jobs in Atlanta from their websites and did well in the one interview that I got. That led to a job at UPS headquarters. Most people were impressed that I’d gone to Duke. The rest didn’t matter.\nEventually I moved to Palo Alto because my girlfriend got a phd opportunity at Stanford and I decided to come along. Shotgunning the resume didn’t really help that time, but surprisingly, walking around the Stanford career fair led to an interesting conversation (most tables were looking for CS majors, but a few weren’t). They were looking for “people who could talk to both machines and people.” Well I’d dabbled with tech my whole life… so I could probably do that.\nI want to add that I didn’t even intend to go to that table. I was planning to walk by, but there was a foot traffic slow down in front of it, and the recruiter literally grabbed me on the shoulder, pulled me out of the line, and asked me if I could talk to people and machines. That part was lucky, but showing up to the career fair at all is something you can do.\nThat led to a Professional Services role at a tech startup called Intapp. Recruiters in Silicon Valley are constantly pinging tech people on LinkedIn, so when I got burned out at Intapp I started looking around. A recruiter called me one day, asking if I wanted a pre-sales role. I’d never seriously considered that before with a quota and all, but why not give it a shot? That led to a sales engineering role at another startup called SumoLogic.\nAfter a while, I requested to move to bigger accounts. After being declined, I asked around and heard that I essentially needed to have another job offer in hand to get that. I threw in a few resumes at Google on a whim and started shotgunning resumes again. Google Cloud (which was just starting up) invited me for an interview which led to a job. I worked there as a Sales Engineer, Sales Engineer Manager, and Head of Solutions Consulting until the big layoffs of 2023.\nThen I joined up with some former colleagues from SumoLogic at another startup called EdgeDelta. My title was Principal Sales Engineer, but knowing a lot of the leadership team, I wore a bunch more hats than that.\nI’ve currently stubbornly not learned my startup lesson and I’m headed to Antithesis, where I’ll be tackling a full Sales Rep role for the first time. It’s the only company where I sent them enough emails that they finally relented and hired me, so hopefully that’s a good sign.\nIf I don’t update this for a while, check my LinkedIn to see what happened next. Otherwise I’ll update this when I can."
  },
  {
    "objectID": "posts/chromatic-harmonica-first-thoughts/index.html",
    "href": "posts/chromatic-harmonica-first-thoughts/index.html",
    "title": "Chromatic Harmonica: First Thoughts",
    "section": "",
    "text": "After some significant delays, my chromatic harmonicas were finally deliverd. I figured I would record my first impressions here.  First, the presence of the thing is very different. I told my wife, the Special 20’s were harmonicas, the Swan that came in the mail felt like an instrument. It’s heavier, plays more notes, and comes in a much bigger case that immediately made me wonder if I should get a different one for carrying it around a convention. A problem for another time.\nSecond, I do love the deeper notes on the 16 hole harp. I have a feeling I would love bass harmonicas as well if I ever went that route.\nThird, after playing it for a bit, I found myself delighted that Tifa’s Theme and Aerith’s Theme were both within reasonable reach on first play through. I can tell there will be an even bigger mental break in my brain than on the diatonic, because it was already taking effort to know that two different notes could be on the same hole. With four notes on each hole now, I can feel my brain hurting, which I’m sure will shift with practice.\nI also got my first sense of loss at losing the ability to play Alfyn’s theme really well. It’ll be a big shift, but there’s no longer that terrible bend that plagues me when I get to it.\nFourth, it does really interesting things to my brain to switch back and forth between the harps. I’m going to want to explore that more in the future, but for now I’m planning to stick to chrom for a bit until I get better.\nFifth, a lot of the material out there for learning chrom appears to center around scales. I’m not opposed to this, but it’s a little surprising given that there was so little of that in the diatonic world (for obvious reasons I suppose).\nIn fact, there isn’t a lot of good intro chrom harmonica stuff at all, in my opinion. I picked up Dave Kettlewell’s book because I really liked his YouTube channel, and I might extract the useful info later, but it reads like a right brained person dictated into Skype call for an hour and someone typed it up. Not to mention the Kindle formatting is barely legible and the chapters are inaccessible from the sidebar. Dave, among others, recommends Method for Chromatic Harmonica, so I’ll give that a try, as well as peek into Yvonnick Prene’s Harmonica Studio. I’ll probably post more about this as I go through things.\nAll in all, it feels uncomfortable to go back to square one, but I already feel like this is the direction I was looking to go, so I’m hopeful about what comes next."
  },
  {
    "objectID": "posts/Cisco-DevNet-2023-10/index.html#episode-description",
    "href": "posts/Cisco-DevNet-2023-10/index.html#episode-description",
    "title": "Cisco DevNet 2023-10",
    "section": "Episode Description",
    "text": "Episode Description\nMore data does not mean better observability! Mel Delgado (Developer Advocate, DevNet) and David Wynn of EdgeDelta explore how to optimize, transform and customize MELT data at the edge before sending it to your observability platform such as AppDynamics, and many more.\n0:00 Introduction 0:36 Learn more about EdgeDelta and it’s capabilities 1:39 Customize and transform data in flight before sending it to your observability platform 2:10 Demo of EdgeDelta agent on Kubernetes 2:30 Demo of EdgeDelta agent on Mac, collecting syslog data from Cisco ISR 1100 and listening to UDP and TCP ports 3:13 How to prevent the melt down of too much MELT Data 3:50 Demo of pipelines functionality - providing data plane view or control plane view for agents 5:28 See how you can extract metrics from devices that are not natively instrumented for it. 5:40 See how you can convert log-based data into metrics and just sending that to your FSO platform 6:25 Leverage the power of support for many different inputs to consistently categorize and label data before sending it to one or many observability destinations"
  },
  {
    "objectID": "posts/did-i-mention-the-pace-of-development-in-obsidian-was-ludicrous-speed/index.html",
    "href": "posts/did-i-mention-the-pace-of-development-in-obsidian-was-ludicrous-speed/index.html",
    "title": "Did I Mention the Pace of Development in Obsidian was Ludicrous Speed?",
    "section": "",
    "text": "Update: Fixed broken blog link. I’ll get good at DNS one of these days…\n\nFirst, it’s absolutely amazing to me how fast development is going with the Obsidian space. The number of things that are 1-2 weeks old that radically alter my workflow are just mind boggling.\n\nhttps://www.ftwynn.com/posts/interstitial-journaling-in-obsidian-with-a-stripped-down-quickadd/\nI wrote that less than a week ago, and now that script is a proper plugin. It’s so hot off the press it isn’t in the Obsidian UI yet, but I’m looking forward to when it is (which will hopefully resolve some weirdness I had with the script version).\nCurrent Use Cases I’m Investigating for it:\n\nInterstitial Journaling (super helpful thus far)\nChangelog at the bottom of any notes files (need to toy with it a bit more)\n\nBoth are good for the “capturing a quick thought from anywhere in a timely manner” case."
  },
  {
    "objectID": "posts/dimension-20-a-crown-of-candy-finale-part-1/index.html",
    "href": "posts/dimension-20-a-crown-of-candy-finale-part-1/index.html",
    "title": "Dimension 20: A Crown of Candy Finale Part 1",
    "section": "",
    "text": "So it seems Brennan might finally get his wish that he couldn’t fulfill in Escape from Bloodkeep…  and get some real PvP incentives going. I don’t like the vibe it creates, but I am interested in what happens next and I’m very glad I’m not at the table. I do wish I could watch this on double speed just to get through it.\nAlso, I don’t think I’ve mentioned this here, but I wasn’t a huge fan of how Ally played their previous characters… but I LOVE Liam. They tend to lean too hard into their schtick, and I find that gets old with religion and doubting and drugs… but social awkwardness and kind-heartedness into badassery… that has been absolutely awesome to see them play out."
  },
  {
    "objectID": "posts/dimension-20-neverafter-first-impressions/index.html",
    "href": "posts/dimension-20-neverafter-first-impressions/index.html",
    "title": "Dimension 20 - Neverafter - First Impressions",
    "section": "",
    "text": "I must admit when I first saw the trailer for this season, I thought “hard pass for me… not into horror.” That said, I couldn’t avoid seeing a YouTube short about how episode 3 was as crazy as episode 2 of Fantasy High, so I figured I had to give it a shot. At least on 2x speed.\nSo far, I’ve come to appreciate a few things I didn’t expect, and I wanted to jot them down for anyone else that might be on the fence about the series as well.\nI’m only up to episode 2, and I’ll leave out any real spoilers even then. So expect more posts as the series progresses. Also, sign up for Dropout if you haven’t already!"
  },
  {
    "objectID": "posts/dimension-20-neverafter-first-impressions/index.html#the-character-twists-are-fun",
    "href": "posts/dimension-20-neverafter-first-impressions/index.html#the-character-twists-are-fun",
    "title": "Dimension 20 - Neverafter - First Impressions",
    "section": "The Character Twists are Fun",
    "text": "The Character Twists are Fun\nYou probably gathered this from the trailer, but the twists on common fairy tales are definitely fun. Ally’s take on Mother Goose is really interesting. Shioban’s take on Sleeping Beauty is great. The Frog prince turning back into a frog is hilarious. If you like strong twists on classic tales like this, then you’re in the right place."
  },
  {
    "objectID": "posts/dimension-20-neverafter-first-impressions/index.html#gerard-is-amazing",
    "href": "posts/dimension-20-neverafter-first-impressions/index.html#gerard-is-amazing",
    "title": "Dimension 20 - Neverafter - First Impressions",
    "section": "Gerard is Amazing",
    "text": "Gerard is Amazing\nTo fan boy for a moment, I think Murph playing Gerard is amazing. He’s striking a perfect balance between “everything is fine and I don’t want to rock the boat” and “I need to go fix things” in a way that I’ve seen few players do well. He’s also a very understated character, which is near and dear to my heart."
  },
  {
    "objectID": "posts/dimension-20-neverafter-first-impressions/index.html#im-suprisingly-hooked-by-the-setting",
    "href": "posts/dimension-20-neverafter-first-impressions/index.html#im-suprisingly-hooked-by-the-setting",
    "title": "Dimension 20 - Neverafter - First Impressions",
    "section": "I’m Suprisingly Hooked by the Setting",
    "text": "I’m Suprisingly Hooked by the Setting\nPerhaps most surprisingly to me, I’m finding the horror element a really compelling setting. Not the body stuff or jump scares, which still isn’t for me, but the overarching sense of dread and the knife edge that the heroes are walking to try and save the world feels more real now than ever. Even moreso than in Unsleeping City Season 2, which I loved for a similar reason. The Big Bad here is less apathy, but more a sharp hopelessness surrounded by terror. It’s… surprising… how much I want to see what happens next."
  },
  {
    "objectID": "posts/dimension-20-neverafter-first-impressions/index.html#one-bummer-ally-seems-to-have-main-character-syndrome-again",
    "href": "posts/dimension-20-neverafter-first-impressions/index.html#one-bummer-ally-seems-to-have-main-character-syndrome-again",
    "title": "Dimension 20 - Neverafter - First Impressions",
    "section": "One Bummer: Ally Seems to Have Main Character Syndrome Again",
    "text": "One Bummer: Ally Seems to Have Main Character Syndrome Again\nAlly has done exceptionally well with Mother Goose in not playing the character too hard, but again they’re the only one holding the world saving item/prophecy. Share the love around the table!"
  },
  {
    "objectID": "posts/getting-started-with-zettelkasten/index.html",
    "href": "posts/getting-started-with-zettelkasten/index.html",
    "title": "Getting Started with Zettelkasten",
    "section": "",
    "text": "For a number of reasons lately, I’ve been looking into the Zettelkasten method of knowledge management, which I’ll talk about at length in a future post.\nOne thing I want to highlight before I even get there, though, is just how daunting it is to get started.\nIt’s not even that the process of turning more temporary notes into your own synthesized ideas is that difficult to understand. It’s that a key step in the process, linking new ideas to previous ones, is frightening when you’re staring at a blank page.\nDoes everything have to be bottom up from new material? I do have some ideas floating around in my head, can I scaffold those first? Do I need to flag them to come back to later?\nMy inclination so far is to do the crappiest thing possible, and fix it later if I have to. Perfection in PKM is far more the problem than never creating and toying with ideas at all.\nSo here’s to diving into imperfection! After all, anything worth doing is worth doing poorly."
  },
  {
    "objectID": "posts/harmonica-week-02/index.html",
    "href": "posts/harmonica-week-02/index.html",
    "title": "Harmonica Week 02",
    "section": "",
    "text": "Another week in the books!  Not too much change on the lesson plan front. bluesharmonica.com has some very thorough early lesson stuff… So I’ve been integrating those exercises into my normal practice alongside my song of choice. I haven’t learned a skill through drills in a while, and it’s actually kind of refreshing.\nI added the Titanic theme to the list of songs to practice, largely because it’s got a lot of lower notes. I can tell that one of the notes in the harp tab is wrong, but it’s good enough to practice with.\nI’ve been working in particular on my hand grip (which finally started feeling right in my hands) and not articulating every note. I had already picked up a habit to put a kah on every note, which seemed to work well at first, but I think it was acting as a mini reset between notes. So the melody was clean, but I was missing some flow. It’s been frustrating to regress in my song while switching to minimal articulation, but I see the value in getting that extra expression from note to note. So… back to the suck we go!\nI’ve also started the music theory lesson, which culminates in enabling transposition of music. I could breeze through most of the basics since I had some background on trumpet and choir when I was young, but the step by step to transposing music for harmonica is hugely valuable to me. I’m toying with different tools to make this easy on the computer, including everyone piano, MuseScore (and the harmonica tab plugin), the online tone generator, and even more on my phone for metronome and pitch checking. I’ve started playing Final Fantasy VII remake, so it think those themes will by high on my list to transpose and learn.\nI recognize that I’m starting to get the basics of Rainbow Connection down, and I’ll want to start integrating other harmonica techniques to see how to be more expressive. They may come with time, but I’m being mindful of what the next limiting factors are.\nOnward and upward! Hopefully FFVII remake won’t crowd out too much of my harmonica time."
  },
  {
    "objectID": "posts/how-my-stoic-practice-paid-off/index.html",
    "href": "posts/how-my-stoic-practice-paid-off/index.html",
    "title": "How My Stoic Practice Paid Off",
    "section": "",
    "text": "I find that Stoicism is a great philosophy for times of crisis.\nIf you’re under pressure, dealing with a lot of expectations from a lot of people, or generally just having a rough go of things, I find the tenets and practices of Stoicism to be empowering, practical, and very useful in moving your life to a better place.\nThat said, many adopt Stoicism in good times, including me. So I wanted to tell the story of how my Stoic practice really helped in a recent time of crisis, in case others could benefit from it."
  },
  {
    "objectID": "posts/how-my-stoic-practice-paid-off/index.html#a-different-sort-of-friday",
    "href": "posts/how-my-stoic-practice-paid-off/index.html#a-different-sort-of-friday",
    "title": "How My Stoic Practice Paid Off",
    "section": "A Different Sort of Friday",
    "text": "A Different Sort of Friday\nA few weeks ago, my Friday didn’t start differently than any other. I got out of bed, downed a glass of water, and opened my Chromebook to start my morning journal.\nBut something was a bit off.\nMy work email, the first thing that pops up on my Chromebook, wasn’t working.\nThat wasn’t an unprecedented problem. Usually the fix involved a combination of updating ChromeOS and refreshing various certificates. A quick check found no updates available, and I didn’t have my security key with me, so I decided to handle it later.\nSo I opened up Logseq and started journaling.\nThere’s a prompt in my morning journal layout that requires me to flip over to my browser for a daily thought. When I did so, my personal inbox flashed by, and something caught my eye. If I didn’t know better, I would’ve thought it was spam, but GMail is usually pretty good about filtering that out.\n\nSubject: Notice regarding your employment\n\nHmm. Hmmmmm…\nThat… didn’t look good.\nI was the only East Coast member of my team, and now being entirely cut out from every corporate communication avenue, I had no way official means to reach out to the West Coasters.\nSo, I started texting the team’s numbers that I had on hand. I shot a LinkedIn message to my boss. I went upstairs to tell my wife. Then… there was nothing to do but wait.\nIt wasn’t long before the news stories started coming across my feed. For the first time, Google was laying off 10% of their workforce. The company had killed and reorganized teams in the past (as well as products, as everyone knows), but this was Google’s first blanket layoff.\n… and I had drawn the short straw."
  },
  {
    "objectID": "posts/how-my-stoic-practice-paid-off/index.html#stoicism-kicks-in",
    "href": "posts/how-my-stoic-practice-paid-off/index.html#stoicism-kicks-in",
    "title": "How My Stoic Practice Paid Off",
    "section": "Stoicism Kicks In",
    "text": "Stoicism Kicks In\nAs the reality of the events settled in, I had the distinct thought: “This is what the practice is for.”\nI’d seen being laid off in countless negative visualizations. I’d journaled about it in my monthly review over and over. I’d re-enforced the ideas around what is truly important and what I truly control over and over again.\nNow if I’m being honest, I hadn’t fully committed emotionally in those thought experiments. After all, Google had never done a layoff, and I knew from first-hand experience how hard it was to fire individuals. But even then, there was emotional muscle memory there.\nAnd I felt… much calmer than I expected. More importantly, I could explain why.\nMany of my friends in the same boat got angry for a number of reasons, whether transparency or fairness or abruptness or impersonal-ness… but I found myself focusing back on the things I could control in fairly short order.\nIf “the obstacle is the way,” then there were opportunities to be found even here. I remembered that this situation is pretty similar to how Zeno started his journey in creating Stoicism. This has all happened before, if not specifically to me.\nThe words of the Seneca kept running through my head from when he was ordered to death. His companions wept for his fate, to which he replied, “where is your philosophy now?”\nMine was right here. Right where I had been building it the whole time.\nSo as surreal as it felt, once I finished reaching out to people, I went back to finish my journal, and start the day like any other."
  },
  {
    "objectID": "posts/how-my-stoic-practice-paid-off/index.html#the-takeaway-practice-makes-permanent",
    "href": "posts/how-my-stoic-practice-paid-off/index.html#the-takeaway-practice-makes-permanent",
    "title": "How My Stoic Practice Paid Off",
    "section": "The Takeaway: Practice Makes Permanent",
    "text": "The Takeaway: Practice Makes Permanent\nI write this post to say to my fellow Stoics, continue your practice in easier times. Especially by building habits. Especially by journaling. Especially by taking to heart the parts that resonate with you.\nIf you do that, then you’ll find just like I did, when life takes a negative turn for you, your practice will be there for you. Your routine will be there for you. It will be as solid as you make it, and you can lean on it for support."
  },
  {
    "objectID": "posts/i-love-stylish/index.html",
    "href": "posts/i-love-stylish/index.html",
    "title": "I Love Stylish",
    "section": "",
    "text": "For those that might not have heard of it, Stylish is an amazing little extension that let’s you add your own custom CSS on top of any website. That might sound dorky and not very useful at a first glance, but I wanted to highlight just two things I’ve done as part of my BASB journey thus far that I’ve found very satisfying.\nI’ve probably on this a bit more than normal because I’ve been stuck on a Chromebook for 3 months and counting due to COVID, but as they say, necessity is the mother of invention!"
  },
  {
    "objectID": "posts/i-love-stylish/index.html#stylish-lets-me-make-small-ui-changes-that-work-for-me",
    "href": "posts/i-love-stylish/index.html#stylish-lets-me-make-small-ui-changes-that-work-for-me",
    "title": "I Love Stylish",
    "section": "Stylish Let’s Me Make Small UI Changes That Work for Me",
    "text": "Stylish Let’s Me Make Small UI Changes That Work for Me\nI’m using Todoist for my task tracking, and I’m experimenting with a number of different ways to organize things.\nI set up one filter in particular to track the outcomes of my projects, but the project names were being pretty consistently truncated, which I didn’t like.\n\n\n\nShort Todoist Example\n\n\nBummer.\nBut with a little help from the inspector, I could narrow down to exactly that span and change it’s width. Presto change-o:\n\n\n\nLong Todoist Example\n\n\nThat’s actually the only Stylish change I have for Todoist right now, and even though it seems small, it makes me feel very grateful for the ability to have a little more control over it."
  },
  {
    "objectID": "posts/i-love-stylish/index.html#stylish-lets-me-solarize-everything",
    "href": "posts/i-love-stylish/index.html#stylish-lets-me-solarize-everything",
    "title": "I Love Stylish",
    "section": "Stylish Let’s Me Solarize Everything",
    "text": "Stylish Let’s Me Solarize Everything\nIn the other case the customization gets a bit more… intense. I have two styles on userstyles.org and both do the same thing: apply a solarized color set to the largely text entry focused the websites for Evernote and Dave Winer’s Little Outliner.\n\n\n\nEvernote Example\n\n\nAside from the benefit of less eye strain, what’s fun about this is that it feels like I’m getting away with something.\nI know the web designers didn’t pick Solarized as a color palette, but I can make it happen. I can tinker and tweak things, all while only affecting my machine (in a safe way as well).\nWhile it may not be a great formal introduction to programming, it’s a great introduction to the hacker’s spirit, and Stylish makes it possible."
  },
  {
    "objectID": "posts/keeping-the-most-important-problems-top-of-mind/index.html",
    "href": "posts/keeping-the-most-important-problems-top-of-mind/index.html",
    "title": "Keeping the Most Important Problems Top of Mind",
    "section": "",
    "text": "It’s funny how once you start practicing something, you notice it everywhere.\nOn of the exercises in Building a Second Brain is to keep a list of your 12 most important questions explicitly listed somewhere so they can percolate in your brain as you move through the world.\nOne of my favorite media professors, Jay Rosen, posted a refresher to his top problems in Pressthink, which I’d forgotten he regularly does.\nWhat I'm worried about. That's my new post, \"A current list of my top problems in pressthink.\" https://t.co/JAVLgdWhcf pic.twitter.com/y7aBDdSQzp— Jay Rosen (@jayrosen_nyu) April 30, 2020"
  },
  {
    "objectID": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html",
    "href": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html",
    "title": "Making Harmonica Tabs: The Easiest Way I’ve Found So Far",
    "section": "",
    "text": "As I’ve been learning harmonica, one of the fun things that I’ve tried my hand at a few times is transposing music I like into harmonica tabs. Going the traditional music theory route was fun for a few rounds, but then the tedium started to set in, and I wanted to find other ways of doing it.\nEnter, MuseScore.  I didn’t see any explicit tutorials on how to do this out there, so I figured I would write down the steps I’ve found to make it as simple as possible.\nAt a high level:\nTo the details!"
  },
  {
    "objectID": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-1---put-the-music-into-musescore",
    "href": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-1---put-the-music-into-musescore",
    "title": "Making Harmonica Tabs: The Easiest Way I’ve Found So Far",
    "section": "Step 1 - Put the Music into MuseScore",
    "text": "Step 1 - Put the Music into MuseScore\nThere’s no magic to this step. If you’re lucky enough to find the song you want already transcribed on the community (and have a subscription), then you’re ahead of the game. Otherwise you’ll need to put it in the program note by note, either with the mouse or a MIDI device. I’ve used the mouse 100% of the time so far.\nThis part is still a bit tedious, but it’ll be worth it, I promise!"
  },
  {
    "objectID": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-2---transpose-the-key-if-necessary-desired",
    "href": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-2---transpose-the-key-if-necessary-desired",
    "title": "Making Harmonica Tabs: The Easiest Way I’ve Found So Far",
    "section": "Step 2 - Transpose the Key if Necessary / Desired",
    "text": "Step 2 - Transpose the Key if Necessary / Desired\nMost of the music I’m interested in wasn’t written for harmonica. So when I’m done transcribing it, it’s usually in a key I don’t have a harp for… given my glorious collection of exactly two diatonic harmonicas.\nThis isn’t necessarily a problem, because one of diatonic harmonicas’ strengths is that once you get a tab in one key, it’s the same for all diatonic harmonicas. The key transposition is already done for you inside the harp… once you have the first tab.\nSo while it’s not usually necessary, you can transpose the music you have in MuseScore before generating the tab.\nCtrl + A to select the whole piece Tools... Transpose... [Choose a key of choice]\nSo far I’ve only used this to get out of octave trouble (further detailed below), but if you’d just prefer to have the music in the key of your harmonica first, you can do that as well."
  },
  {
    "objectID": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-3---use-the-harmonica-tablature-plugin-to-generate-the-tabs",
    "href": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-3---use-the-harmonica-tablature-plugin-to-generate-the-tabs",
    "title": "Making Harmonica Tabs: The Easiest Way I’ve Found So Far",
    "section": "Step 3 - Use the Harmonica Tablature plugin to generate the tabs",
    "text": "Step 3 - Use the Harmonica Tablature plugin to generate the tabs\nSo this plugin is very basic, simply giving you the holes for the harp key you pick that match the notes that are in MuseScore. This is powerful, but also lets you shoot yourself in the foot if you’re not mindful.\nIt’s powerful because it’s position agnostic. Pick the key of harmonica the piece is in, and BAM, you’ve got a first position tab that works on any diatonic. Pick a harmonica key that you know can play the displayed key in second position? You’re good to go.\nPick a harmonica key that matches your harp but has no relation to the key onscreen? Well… then you might have a weird time, getting tons of funky draws, overblows, and missing notes in the tab.\nFirst position is the easiest to adjust to. Just match the harp key in the plugin to the key of the music when running it. You can use the generated tabs on a different harp later and it will sound fine, just transposed to a different key."
  },
  {
    "objectID": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-4-5---make-sure-no-octaves-need-adjustment-and-re-run-the-plugin-if-need-be",
    "href": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#step-4-5---make-sure-no-octaves-need-adjustment-and-re-run-the-plugin-if-need-be",
    "title": "Making Harmonica Tabs: The Easiest Way I’ve Found So Far",
    "section": "Step 4 (& 5) - Make Sure No Octaves Need Adjustment, and Re-Run the Plugin if Need Be",
    "text": "Step 4 (& 5) - Make Sure No Octaves Need Adjustment, and Re-Run the Plugin if Need Be\nAs mentioned in the last section, the plugin will just throw an X in your tab if the note can’t be found on the harp. I find this most often when a section dips too far below what the harp can offer.\nYou can highlight just a section of the music in MuseScore (or the whole piece with Ctrl + A), and transpose the notes up (Tools... Transpose... Up), and you’ll get the higher octave.\nClear out the old tab (Ctrl + Z for undo is easiest, or left click a tab number, and right click Select... All Similar Elements and Delete). Then re-run the plugin to see what you get."
  },
  {
    "objectID": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#conclusion",
    "href": "posts/making-harmonica-tabs-the-easiest-way-ive-found-so-far/index.html#conclusion",
    "title": "Making Harmonica Tabs: The Easiest Way I’ve Found So Far",
    "section": "Conclusion",
    "text": "Conclusion\nHopefully that helps some aspiring harmonica tabulators. I’ll be sure to update this post with anything new I come across as I continue the journey, but I think using MuseScore as a bridge into getting more harmonica tabs out there is a big win for everyone."
  },
  {
    "objectID": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html",
    "href": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html",
    "title": "My BASB Implementation in Org Mode v2023-06",
    "section": "",
    "text": "The meat and potatoes of the series! The stuff you’ve probably been waiting for!\nRather than dump the entirety of my init folder on you, I’ve opted to give a more narrative explanation of how the system came to be. If you are unclear about anything, please reach out on the socials and I’ll do my best to clarify.\nI’m sure I’ll update this page more than a few times, but expect I’ll write a new version after enough time passes."
  },
  {
    "objectID": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html#global-configurations",
    "href": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html#global-configurations",
    "title": "My BASB Implementation in Org Mode v2023-06",
    "section": "Global Configurations",
    "text": "Global Configurations\nThere aren’t that many global configurations I want to call out at the top. Generally, I write my init file in org, add packages and comments that I want to try, and add in commands I want to keep handy to my general.el keymap.\nThat said, there is one thing I want to encourage anyone considering org to take a look at: you should reverse the insert order of headings so that new entries come in at the top… a “reverse cron” approach to insertion if you will… rather than the default of appending to the bottom.\n(setq org-reverse-note-order t)\nI’ve found that this approach leverages the fact that we tend to want more recent things more at hand than older things. Plus if you stick wth the system for a while, appending to the bottom often entails a lot of scrolling.\nYour mileage may vary, but worth noting."
  },
  {
    "objectID": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html#basb-beginning-with-the-end-in-mind",
    "href": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html#basb-beginning-with-the-end-in-mind",
    "title": "My BASB Implementation in Org Mode v2023-06",
    "section": "BASB: Beginning with the End in Mind",
    "text": "BASB: Beginning with the End in Mind\nI find that the nature of BASB creation inclines people to focus on the BASB as the target output. But that’s of course, not the real goal. The real goal is to figure out what other stuff this new tool/practice enables. Keeping that in mind, I find I can’t talk about the thing without talking about what I use it for and want from it first.\nAs such, I will walk my setup through each of the target use cases I aim to solve. I’m sure it will evolve as I add more, but the needs here are what drive the system, not the system driving my needs.\n\nMy Target Use Cases\n\nJournaling and Regular Reviews\nThis is the number one use case because creating a regular habit that uses the tool multiple times per day is key to really learning it. Journaling isn’t a technically complicated use case, just requiring some templates and a place to journal in the system that doesn’t require thinking about where the entry goes.\nI took a cursory glance through various options inside of org, and opted for using org-roam’s dailies to handle this. I’ve used diary mode in the past, but I liked org-roam’s capture system that was tied to it, so I went that direction. I also use org-roam for other things which I’ll describe later, so that was a reasonable fit.\nThis does mean that I break my principal of a single org file almost immediately, since org-roam does separate daily files by default. However, experience has taught me that I never mess with these physical files themselves, so I think it’s fine. Putting journals in one file is also a surefire way of eventually causing a performance problem somewhere down the line. Might as well head that one off before we get there.\nAdditionally, I keep all my templates as org files in a sub-directory, ~/org-roam-repo/templates. I find using full org files much easier to visualize and edit rather than storing them as strings in my init file. I mean, I can only handle so many \\n’s before my eyes cross… and I’m a person who likes regular expressions.\nThis also shows the first example of my principle for subdirectory use in org:\n\nPrefer a flat, single directory where possible. Use sub-directories for programmatic separation of content as needed.\n\nIn this case, having a single template directory (no files of which are included in the org-roam index) makes them easier to find, refer to, and keep out of the way of other files in BASB.\nThe following templates apply to this use case:\n\nMorning Journal\nEvening Journal\nWeekly Journal\nMonthly Journal\nInterstitial Journal\n\nDaily notes themselves go in a special subdirectory, ~/org-roam-repo/journals. The same reason as above applies, in that org-roam expects a directory to work with for journals, and I find separating them out is easier for various completion frameworks to handle rather than co-mingling them with other files. After all, today’s journal is very relevant. Tomorrow’s much less so. Even less before that. And on and on… No need to have all the clutter if I don’t need it.\nAnd with just that, we’ve got a perfectly serviceable digital journal that I can copy, paste, and link into/out of which I interact with each morning and night. Not bad for minimal effort (though I’ve implemented enough PKM’s to know this is an easy case).\nA huge but not-so-obvious reason we tackle this use case first, is that daily journals create space for process that helps fill any gaps in the rest of our setup. With a simple checklist as part of my evening journal, I can remind myself to do all kinds of things at the end of the day.\nMaybe I need to do something manually for a half-baked process I didn’t finish. Maybe I need to reflect on if a piece of tagging overhead I added is still worth it. Maybe I need to scan Snipd for any useful clips rather than try to figure out a Rube Goldberg integration with it. Whatever the needs are, starting with journaling gives a regular means of repairing or revisiting any issues that might arise as we build out BASB.\n\n\nSaving Notes, Links, and Other Ideas\n\n\nCapturing Notes\nFor pretty much anything, from spur of the moment thoughts to taking my own notes on a meeting, I’ll fire up my Interstitial Journaling capture template and throw it in the Daily Note. The idea is to minimize the energy wasted around “where does this go?” Answer: The Daily Note. Done. I can refile it later, and if I don’t I can full-text search the directory.\nIn fact, I do refile them later… during my evening journal. There’s a checklist item to review the non-journal entries and refile them to PARA. There aren’t usually very many, and org-refile makes it extremely easy to do.\nFrom time to time, I’ll take notes directly in a relevant PARA section. But often it Daily Note first, then refile.\n\n\n\nOrganizing notes\nNow we get back to the principle I mentioned earlier: putting everything in one org file. PARA is a great framework, so I have a file simple named PARA.org with Projects, Areas, Resources, and Archive as the top level headings. There are sub-bullets of all the things you might expect under those headings.\nTo be clear, this is not the org-roam way, but it is the org way. This way we get to earn any complexity we add to the system. I keep all my notes for various things in that single file, and if it feels too unwieldy, then I’ll bud it off into it’s own org file.\nHaving been through this before, I stubbed my favorite 9 or so Areas and Resources to start, and will let the rest grow over time. I give each heading I want to refile to an ID via a custom function I wrote (timestamp_heading) so I can use org-roam-refile to refile any other notes there. I also add a Thoughts sub-bullet under each and do the same, for any miscellaneous info I want to refile to the right Area without thinking about what subsection it should belong to.\nIt might have been possible to use a many-file approach instead. With clever tagging or filing or something, I could have probably used org-ql to compile this PARA view from the bottom up. I opted not to do this because:\n\nI couldn’t find an easy way to do it with a little Googling. Experience in emacs land tells me if a few Google searches don’t find what you’re after, then it will be much harder (though not impossible) to implement. Most people pick a relatively small number of org files if they aren’t going all in on org-roam or deft, so I think that’s fine to start. Even if I ultimately grow to have an org file per sub-Area, that list probably won’t be more than 20 or 30 files… maybe 100 in the long term.\nTagging consistency is really hard, and really underestimated. Auto-complete is a huge help, but if I can just file something once, I’d rather do that than remember how to tag stuff over and over, especially in a distributed system. Inheritance with hierarchies is clear and easy to work with.\nTagging is a great theoretical concept for Information Management, but that’s not what I want to spend time focusing on. If I can get to a 95% good enough solution with 5% of the effort, then I’ll do that. Or in another sense: if I can remove a small mental tax that I would pay every time I made a new note from now into the future, no matter how small, I think that’s probably a good call.\n\nNow, things do get a little sticky in a few places when we get to parts of this use case outside of text files on a single Linux desktop.\n\n\n\nMobile\nAh mobile… a top request of many and a bane of many a PKM tool’s existence. I’ve personally used Obsidian and Logseq’s native Sync, as well as Roam when it was web based.\nIn pretty much every case the experience is awful. Conflicts happen that you don’t expect, resolution flows are awkward, plugins kept getting weird for me (especially in Obsidian), and on and on…\nEmacs is not immune to these issues, but stepping on a few thorns in the past helps clarify exactly my priorities.\nFirst, I want to be able to capture ideas quickly on mobile, either mine or from another app. The fewer clicks the better, and if it works with the Share with... menu on Android even better.\nSecond, I want to be able to view all my notes when I need them on the go.\nNotably, I don’t find editing the bigger system to be very important, because typing on mobile is terrible anyway. I would like to be able to see info about a contact before I jump into a meeting with them when I’m out and about, but I can capture any new info as a new note and refile it later.\nI solve these cases with a three-pronged approach on my Android phone.\nFirst, I need to get the files on my phone at all. Here, SyncThing is the answer. It’s like Dropbox but one you run yourself with no server required. It’s easy enough to install on multiple machines (from Android to Linux to Windows to Mac), and does its job. I sync all of my org notes to the phone, though I have a sub-directory mobile for a few specific files I’ll cover in a second.\nSecond, Orgzly solves the capture use case wonderfully (along with TODOs, see below). It’s easy to capture notes via the widget, and the app is easy enough to understand. To minimize its impact on the broader PKM system, I only point it to the mobile sub-directory which contains three files: TODOs.org, Keep.org, and Contacts.org. Since I do edit these files on my PC, I have to be mindful about giving some sync time before jumping back onto my phone. My typical flow is to jot down things on mobile, then refile them at night. Very little goes the other way (except for TODOs). Keeping Orgzly’s impact to a few files also keeps it from overwriting files where I care about whitespace formatting, which I hear is a problem for others that have tried to be all in on Orgzly.\nI want to add, my first iteration of capture was to just Share with... to Google Keep and then copy those into BASB each night during the evening journal as a checklist item. The copying and pasting back and forth got annoying, and I find capturing straight to an org file from Orgzly lets me use one refile command at night to get it where it needs to go. So I switched… but that’s where the Keep.org namesake comes from.\nThird, for viewing all of my notes, I use Orgro, which is a much cleaner viewing experience than Orgzly since that’s all it does. This I can point to the whole org directory, find what I know is there, and get out again.\nThis setup works most of the time, and it’s fairly straightforward for me to resolve conflicts when the arise via ediff (which is worth learning if you haven’t used it before). But, mobile is a pain point for everyone, and I personally believe the “need” for it is significantly overblown.\n\n\n\nPictures and Other Attachments\nWhile most of what I capture and deal with is text, I do keep a running doc of how I want to improve my dress style, with visual inspiration I pull from around the web. So I do need to meaningfully handle pictures. There are two options I see mentioned a lot around the web.\nThe first is org-attach. There are a lot of cool things about org-attach. It isolates files in note specific directories. It has a link inference mechanism so your URI’s don’t get too long. It encourages using the id property, which we’re already using for org-roam.\nBut…\nA big use case for BASB is the ability to pull together old work and remix it into something new. The actual link in the text, if copied, will change context when pulled into a project with a different ID. There are workarounds, but for my simple case, I think I’ll just link to the files in a directory outside the org folder on disk.\nI specifically have a different folder outside the org directory because I don’t want to sync a bunch of binary blobs to my phone. I suspect that folder could get large much faster than the org directory itself with modest use.\nAs such, org-download is a good enough helper for the time being, with a prefix to the folder outside my main org folder. That directory is relative to $HOME, just like my main org folder, so as long as I can set $HOME (even on Windows), everything will find it just fine, and moving links around in org won’t matter.\n\n\n\nPossible Enhancements\nTo walk the path of emacs is to always be looking for things to be better. I have my eye on a few things for the future that I haven’t bothered to implement yet.\n\nMove the Archive to a separate file, for all the things that fall out of scope and shouldn’t show up as refile targets. I don’t imagine this would be necessary unless there are either a huge number of name conflicts, or if size really gets out of hand.\nI’m thinking about pulling Contacts out of the mobile folder and putting it in the root directory, as I put it in there before I found Orgro. I like that I can add to it in a pinch via Orgzly, but I’m very used to adding a new quick capture and refiling it later these day. I chalk this under “not bothering” for now.\nTry out Voit’s method of being completely filesystem agnostic: https://karl-voit.at/2022/02/10/lfile/. My concern here is that I regularly shift between all major OS’s, and this might not be so easy to achieve on Windows.\n\n\n\n\nProjects\nThere are approximately a hundred different ways to model a project in Org mode. I’ve already iterated through a few approaches, but rather than catalog each one, I’ll just detail where I’ve landed for now.:\n\nA project is a headline with the tag project (set to not inherit in my init)\nThe project itself has a deadline on the root node, which is the title of the project\nThere are a lot of sub-headers I defined in a capture template to help the project stay contained and on track. I don’t use them every time, but it’s good to see a list on new project creation. Use can insert capture templates at point by preceding them with C-0, even if you’re using general.el\nNotes can be refiled in from elsewhere with org-roam-refile once I add an ID\n\nFor fleeting thoughts that are project specific, I’ll refile them into the project\nFor things already in other places in BASB, I lean toward copying into the project, rather than a full refile\n\nArtifacts that live elsewhere like Google Docs and such are linked\n\nFor me, this happens very often, as no one else I work with uses emacs, org, and so on\nI tend to brainstorm in Org and then export out to other systems for collaboration\n\nWhen finished, the project is refiled to a Completed Projects section in the Area\n\nI couldn’t figure out a good way to retain the category when Archiving them otherwise\nBut also, reporting is a terrible use case to optimize for in general. I strive to optimize for doing, not for reviewing\n\n\nThis approach distributes all the projects in their various areas, but allows me to see any I’ve committed to through the agenda.\nThe challenge I ran into next was what to do about the (rather large) pile of someday/maybe project ideas. Stored in their own Area and Resource sections, they seem too disparate and hard to visualize together. Stored in the projects section they could be prioritized, but would quickly get blurred into mush.\nSurely there was a way to keep the entries nestled in their Areas and to still see them fairly grouped together? Do I turn to alphapapa, his name be praised?\nIn short, yes. Enter org-ql. While it seemed like overkill to figure out a view to pull all the projects together, this is a great tool to auto-group by category (which I’ve added to each Area) and see all the relevant info.\nTODOs for each project are kept somewhere under the project header. One section I use a lot that borrows from the BASB course is the Intermedite Packets section. Its headlines are like discrete sub-projects but with a more targeted focus to a discrete, deliverable unit of work. It helps a lot to crystalize a bigger project into smaller chunks. That said, I’ve noticed I have to be careful not to be too beholden to the list. Otherwise the uninformed me of the past might boss around current me into IP’s I discover aren’t the right things to do first once I get going.\n\n\nPossible Enhancements\n\nUse org-transclude instead of copying in notes\n\nI hear good things, and I doubt I would need the text directly in any exports, so it seems plausible\n\n\n\n\n\nTODOs\nHand in hand with projects, of course, is TODOs. Org supports these natively, so there isn’t too much to cover given the above, but I’ll call out the interesting pieces.\nThe big trick is that TODOs.org is one of the three files I have Orgzly paying attention to on my phone. This lets me use the widget to see upcoming TODOs, capture them on the go, and get alerts on my phone base don the timestamps. I do add to and update TODOs from my desktop as well, so I need to be a little careful when syncing, but Nick Anderson points to a way to use Tasker to kick off an Orgzly sync on screen wake, and that’s pretty much kept everything running smoothly. Even if issues do pop up, it’s very easy in Orgzly to reset by force pushing or force pulling, depending on which is best.\nI do occasionally forget to save a file (particularly from the agenda), so I’ve added in auto-save for buffers that aren’t saved after 60 seconds.\nMost of my TODOs live in that file. However, I also keep TODOs in my projects as well. The PARA file is already in the org-agenda, so the only drawback is that those don’t sync to mobile. Currently, I’m ok with that, because if I’m being honest with myself, I don’t do that kind of work on my phone when I’m out and about. A key insight of David Allen’s Getting Things Done is that we do some things best at particular times and contexts. I find a lot of people in the PKM space try to stuff everything into mobile when they really won’t get much productive output from it. It’s a classic 80/20 issue. If there is a task I do want to stew on while I’m about, I can either find it in Orgro, or copy it into my TODOs.org file as a one-off, though that case so far has yet to actually happen.\n\n\nCRM\nTime for contacts!\nNow, unlike most people who get elbow deep in emacs land, I’m not interested in bringing everything under the sun into org mode. It could theoretically be useful to have all my contact data in one place, but Org mode doesn’t plug well into non-emacs systems. My email client is GMail. Google Contacts syncs to my phone without issue, and it’s nice to see names when people text me. I don’t really need to tinker with caldav and vcard import/export because those parts are working fine right now.\nWhat I do need from a CRM (contact relationship management system), is the following:\n\nA way to tell who I should reach out to and check in on (I am awful at this)\nA way to pull together notes on a specific person into one place from multiple meetings\nA way to view contact notes before talking to someone, with or without my laptop\n\nThere is a contact management thing for org called org-contacts, but more than being under-documented, it doesn’t seem to help with my core user journeys above. I don’t really care (for now) about storing contact info in different ways. I don’t need it to play nice with mu4e or other emacs email clients. However, the idea of all the contacts in a single file does make sense to me in the vain of being as simple as possible.\nSo, my current flow looks like this:\n\nCreate a new entry in the contacts file from a template\nRefile them to a Tier in the Contacts.org file (some people should be contacted every 3 weeks, some every year, some in between)\nReschedule the recurring TODO to follow up based on the Tier they’re in\nWatch the org agenda for when to follow up\nTake notes on meetings and communications as Interstitial Journal entries when they happen\nRefile those entries to the subheading Timeline in the contact and update the follow up TODO\n\nA lot of those edges are a bit manual and could go wrong, but for the contacts I care most about right now it’s working well enough.\n\n\nPossible Enhancements\n\nHave the recurring timestamps be derived from the Tier the contacts are in, rather than setting them up manually\n\nI go back and forth on this, as it’s also useful to set the follow up to a shorter period of time if needed. So I’ll leave it as is for now.\n\nHave the last touch timestamp update when I refile a note to its Timeline\n\nThe last touched timestamp is a holdover from Obsidian\nI haven’t written a report to see when I last talked to all my contacts, but when I do I’ll judge if this approach is better or if I can find the most recent inactive timestamp under a contact easily enough\n\nHave a way to surface contacts I’m meeting with next in a buffer of some kind\n\nThis involves bringing more scheduling info into Org, which I’m not inclined to do since Google Calendar is good enough for now\n\n\n\n\n\nRecipes\nOne of the things I’m working on in my life right now is cooking. I’m trying to get good at it both for fun and for feeding my family. The big key seems to be iteration, and iteration is best done with notes!\nI broke out recipes into its own file from the start, because I sensed it would be big and unwieldy from the start. The Top level headings are:\n\nIdeas to Try\nBreakfast\nSnacks\nPrep Staples\nMain Dishes\nSide Dishes\nDesserts\n\nEach Recipe is a heading in one of those groups with notes on the background and research, my own shorthand for the recipe, and a section for Experiments which are all preceded by a timestamp. Experiments all have sections for Notable changes, Results, and Things to Try Next Time.\n\n\nStyle Inspiration and Thoughts\n\n\nStoicism\nThis is possibly the most undefined use case thus far."
  },
  {
    "objectID": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html#code-breakdown",
    "href": "posts/my-basb-implementation-in-org-mode-v2023-06/index.html#code-breakdown",
    "title": "My BASB Implementation in Org Mode v2023-06",
    "section": "CODE Breakdown",
    "text": "CODE Breakdown\nWhile I think the use case by use case breakdown is a better framing and more informative than purely looking at the CODE framework, I thought I would run through it here should there be any interest from the BASB community.\n\nCapture\nBreaking down capture by type of information source:\n\nBooks\n\nRead on Kindle if possible and capture via Readwise\n\nArticles\n\nRead through Readwise Reader and capture there\n\nTwitter/Mastodon\n\nUsually capture a link on mobile via Share with... to Orgzly\nRefile and take notes as needed after Evening Journal\n\nYouTube Videos\n\nI’ll generally take notes directly in emacs in an Interstitial Journal entry\nThen I’ll refile it where it should go\n\nPodcasts\n\nSnipd is my podcast player, which allows for clipping\nI DO NOT use the Readwise export, because I find it too noisy\nInstead when I’m done with an episode, I’ll share the notes via Orgzly and think through those notes later in BASB\n\nMeeting Notes\n\nCapture in an Interstitial Journal\nIf part of a work meeting, refile to the right section there\nIf part of a 1:1 personal contact meeting, refile to their Timeline section\n\nMy Own Thoughts\n\nInterstitial Journal or Orgzly entry, depending on if I’m out or at my desktop\nRefile as needed\n\n\n\n\nOrganize\nThis is mostly covered elsewhere, but I try to stick to one PARA file if possible, and bud off pieces that should be separated for programmatic reasons, or if I know they’ll be really hairy sections (work, Recipes, etc.).\nI do want to add that org-roam is amazing for being ID based, which allows for incremental change when using it. Other similar tools require going a bit more all in on their preferred file structure. I like that org-roam doesn’t.\n\n\nDistill\nI tend to blend some beliefs from Zettelkasten into this step, rather than adopt Tiago Forte’s approach wholesale.\nI don’t think highlighting is especially valuable as a practice, even when I was using Evernote. Even in an iterative fashion, I just found it didn’t resonate with me.\nThat said, I do think that rephrasing in your own words is super valuable. The whole idea of fleeting notes &gt; literature notes &gt; permanent notes is leveraging the power of your own interpretation to make the information more yours. I don’t see a reason to put that step off like Tiago does.\nI’ll often use a &lt;&lt; to denote personal thoughts as opposed to a good-faith transcription of ideas when I’m taking notes. I might want to tinker with a personal summary at the top at some point… but in either case I wholly embrace getting to the part where I rephrase things, rather than waiting for multiple passes at the material.\n\n\nExpress\nThis is a tough area for me, but I’m working on a few avenues for it.\nFirst, there’s this blog! It took a while to get around to setting up ox-hugo, but now that I have I’m very happy with the outcome. I’m hoping more personal blog posts will be on the way.\nSecond, part of my Stoic practice is to read r/Stoicism and respond to someone who’s asking a question every morning. I actually use the reddit app to scan the posts, but then I’ll use redigg to pull in the actual text and write a response in org mode. Then I’ll convert via blackfriday and paste it back to reddit. I’m hoping to add these posts to my own blog at some point, since I don’t like how siloed they are in reddit. The recent API fiasco might break this flow soon.\nThird, I’m working on a few work projects that involve research and expression. I won’t go into them much here, except to say I’m using all the techniques I’ve mentioned so far to try and build a better public understanding of Dynamic Observability."
  },
  {
    "objectID": "posts/one-of-the-nice-things-about-stoicism/index.html",
    "href": "posts/one-of-the-nice-things-about-stoicism/index.html",
    "title": "One of the Nice Things About Stoicism",
    "section": "",
    "text": "I’ve been reading more and more about stoicism lately, and one thing that I really like about it is that you can explain, as well as recall, the basics in about 30 seconds. The four virtues are easy to rattle off, and some of the key lessons boil down to just a couple of phrases (there are some things you can control, and some you can’t).  In addition to being short and easy to remember, those basics also are deep enough that they easily apply to many areas of life, and will take a full lifetime to live up to.\nI’ve caught myself getting angry more than once this week, only to remember “am I about to choose to live a better life by seeking wisdom, courage, temperance, and justice… or am I heading in a different direction?” If that sentence was any longer, I’m not confident it would have come to mind."
  },
  {
    "objectID": "posts/should-you-choose-org-mode/index.html",
    "href": "posts/should-you-choose-org-mode/index.html",
    "title": "Should You Choose Org Mode?",
    "section": "",
    "text": "To those who are emacs and Org mode curious, I’d like to give you a few things to consider about emacs and org mode.\nBe mindful, there are some dangerous opinions below. You can reach out on the socials if you want to challenge me on them."
  },
  {
    "objectID": "posts/should-you-choose-org-mode/index.html#reasons-to-choose-emacs-plus-org",
    "href": "posts/should-you-choose-org-mode/index.html#reasons-to-choose-emacs-plus-org",
    "title": "Should You Choose Org Mode?",
    "section": "Reasons to Choose Emacs + Org",
    "text": "Reasons to Choose Emacs + Org\n\nThe Basics\n\nIt’s open source in the truest sense of the word\nIt works on plain text files, a format you can bet on for the next 50 years\nIt’s flexible enough to handle everything from notes to contacts to recipes to journaling and beyond\nIt’s extensible, in small ways and big ones\n\nFor many (especially programmers), this might be enough. For those who know the PKM space, they might point out that LogSeq and Obsidian both fit most of these requirements. And they have mobile apps with sync services on top of that! Why shouldn’t you use them instead?\nWell… there are a few more reasons unique to org mode to consider.\n\n\nThe Advanced\n\nYou can change how almost every single keystroke in org mode works to suit your workflow best, and make them contextual so you can toggle those changes on and off\nNew extensions with significant functionality (I use a package called org-roam, for example) are being published all the time. Emacs is a programmer’s editor after all, and programmers be promgrammin’. If there is a new paradigm that emerges in the PKM space, you can safely bet that it will make its way to Org mode in some fashion at some point (as with org-roam).\nEmacs has been around for 40+ years, and will probably be around for 40+ years more assuming the Lindy effect holds. If longevity is important to you, you could do much worse than emacs + org mode\nAs you understand yourself and how you like to work, emacs will flex with you over time in a way no other tool can. You design it as you go. You sit at the controls. There is no external group that may or may not implement what you want.\n\nYou take on more responsibility when you choose emacs, but you take on more potential as well. It’s a powerful consideration that no other tool can offer."
  },
  {
    "objectID": "posts/should-you-choose-org-mode/index.html#reasons-to-not-choose-emacs-plus-org",
    "href": "posts/should-you-choose-org-mode/index.html#reasons-to-not-choose-emacs-plus-org",
    "title": "Should You Choose Org Mode?",
    "section": "Reasons to NOT Choose Emacs + Org",
    "text": "Reasons to NOT Choose Emacs + Org\n\nThis is Your First PKM\nThe path to emacs + org mode is one I would suggest almost exclusively to those on their second PKM tool or later. It is indescribably useful to have some first-hand experience of different ways to organize your thoughts, what your preferences are, and what your negotiables and non-negotiables are. Experience will be the best teacher for those things.\nEmacs will bend precisely to your will. The clearer your will is, the more you will get out of it.\n\n\nYou Want Something Shiny\nThere’s also a level of disillusionment that is useful for approaching org mode. It is not the shiniest tool. It is not the easiest tool. It is not the tool of the year in 2023 or beyond. The year of the Emacs Desktop is emphatically, never coming.\nBut if you try a few PKM’s you’ll see just how much of the glitter fades away and how fast. Emacs will still be here when many have come and gone. If you learn it, so will your system."
  },
  {
    "objectID": "posts/should-you-choose-org-mode/index.html#the-hidden-benefit-of-emacs-plus-org",
    "href": "posts/should-you-choose-org-mode/index.html#the-hidden-benefit-of-emacs-plus-org",
    "title": "Should You Choose Org Mode?",
    "section": "The Hidden Benefit of Emacs + Org",
    "text": "The Hidden Benefit of Emacs + Org\nThere’s one more thing I want to mention. Emacs is a “better than good enough… but not perfect” solution for the majority of PKM needs.\nThis is important to take to heart, because once you realize perfecting specific features is not the true goal, you can let go of finding the “perfect” tool for any specific job. You can hack something together that just works for now and then get back to making valuable stuff.\nEmacs is text buffers all the way down, which is far from a perfect programming construct to work with… but it’s good enough to get most anything done. Even if you have to copy and paste something for the last mile instead of doing a fancy API integration, if it gets you back to focusing on what matters, that’s the real value of a PKM system.\nI don’t do everything in Emacs. I don’t do email or read news. Heck, I usually open VSCode to do any real programming. But I love that my PKM tool is emacs. Once you taste it’s power, I think you might too."
  },
  {
    "objectID": "posts/The-Evolution-of-Observability-Practices-2023-10/index.html#description",
    "href": "posts/The-Evolution-of-Observability-Practices-2023-10/index.html#description",
    "title": "The Evolution of Observability Practices 2023 10",
    "section": "Description",
    "text": "Description\nOpenTelemetry has greatly impacted the observability landscape over the past few years. While it introduces an open standard for telemetry generation and collection, what is actually improving the lives of o11y teams?\nJoin us for an in-depth chat with guests David Wynn, Austin Parker, Vijay Samuel, Nočnica Mellifera, and Iris Dyrmishi on the idea of how we can evolve existing observability practices into something even better than what we have now.\n#observability #OTel #o11y #opentelemetry #yttech #otelenduserworkinggroup #otelEUWG"
  },
  {
    "objectID": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html",
    "href": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html",
    "title": "The First Bend Reconsidered: I Don’t Think I Want This",
    "section": "",
    "text": "So, I know I’m in danger with this current line of thinking, because changing course just as you start learning something can lead to a lot of errant twists without making any progress. I’ve only just started to learn bending on the harmonica at all, let alone learn to do it well.\n… But I can’t get the idea out of my mind that I might want to switch to chromatic harp instead. And while I shouldn’t quit before I get a good sense of something, I similarly shouldn’t ignore my own feedback and preferences when other viable alternatives exist.\nSure, The grass is always greener on the other side, but there are a few reasons that I’m taking this seriously enough to try a switch.  ## I’m Really Struggling To Enjoy Bending Practice\nThough I’ve heard many players bend and enjoy hearing them play, I’m finding that I simply do not like playing the bends.\nI do not like how they sound when I practice. I do not like how imprecise they are. I do not like how most of the notes on the harp are well defined… only then to have this arbitrary trombone-like component which removes that just to get notes that feel like they should be there already.\nIt seems you can still bend notes on the chromatic harmonica, but that style of harp also is much more in line with having a place for all the notes to begin with… no torturing of the instrument necessary. Plus, for my goal (to follow people around at DragonCon and play the themes of any costumes I see), I’ll mostly (if not only) be playing melodies anyway."
  },
  {
    "objectID": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html#the-chromatic-harp-seems-closer-to-my-goals",
    "href": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html#the-chromatic-harp-seems-closer-to-my-goals",
    "title": "The First Bend Reconsidered: I Don’t Think I Want This",
    "section": "The Chromatic Harp Seems Closer to My Goals",
    "text": "The Chromatic Harp Seems Closer to My Goals\nWith the walk around DragonCon as my goal from the very start, I thought this would be achievable enough on the diatonic. It has enough range, and with the right technique and practice I could pull all the notes out that I needed. Most learning material these days seems to be for diatonic, so there’s plenty of help out there. I might have to transpose a few songs into a different key, but no big deal.\nHowever, as I’ve gotten into it I’ve learned that diatonic harmonicas tend to be more blues and band focused. This is a pretty far mark outside of what I want to do, and it feels a bit like I’m trying to pit a round peg in a square hole.\nChromatic’s focus on melodies and including accidentals in the design means I carry fewer harps, focus on the stuff that will make people smile, and hopefully won’t rely on bends… or at least not as much as on diatonic."
  },
  {
    "objectID": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html#a-chance-to-go-lower",
    "href": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html#a-chance-to-go-lower",
    "title": "The First Bend Reconsidered: I Don’t Think I Want This",
    "section": "A Chance to Go Lower",
    "text": "A Chance to Go Lower\nThird, the least impactful factor but not a totally insignificant one, I’ve found that I love playing lower notes on the harmonica. The 12 and 16 hole chromatics give the full range on those deeper notes without crazy bending work. I’m sure there will be other challenges making the switch, but even just switching the key from a diatonic C harp to a diatonic A harp made practicing much more enjoyable for me. I look forward to even more octave flexibility as I walk down this road."
  },
  {
    "objectID": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html#moving-forward",
    "href": "posts/the-first-bend-reconsidered-i-dont-think-i-want-this/index.html#moving-forward",
    "title": "The First Bend Reconsidered: I Don’t Think I Want This",
    "section": "Moving Forward",
    "text": "Moving Forward\nThe biggest challenge I think I’ll have moving forward is figuring out what new lesson plan I should undertake. Some of the original checklists for beginner intermediate and advanced look like they still apply, but I’ll want a lesson plan more focused on chromatics. I’ll post here with what I come up with once I’ve found it.\nHopefully I’m not re-reviewing my harmonica journey too soon, but I think these are probably appropriate adjustments to make 4 weeks in, and I’m trying to be open to the idea that changing course is not the same as failure or abandonment."
  },
  {
    "objectID": "posts/The-Unofficial-Partner-Podcast---Episode-288/index.html",
    "href": "posts/The-Unofficial-Partner-Podcast---Episode-288/index.html",
    "title": "The Unofficial Partner Podcast - Episode 288",
    "section": "",
    "text": "https://www.unofficialpartner.com/podcast/episode/79186e46/up288-esport-economics-the-in-game-ad-market"
  },
  {
    "objectID": "posts/The-Unofficial-Partner-Podcast---Episode-288/index.html#episode-description",
    "href": "posts/The-Unofficial-Partner-Podcast---Episode-288/index.html#episode-description",
    "title": "The Unofficial Partner Podcast - Episode 288",
    "section": "Episode Description",
    "text": "Episode Description\nThe market for in-game advertising and sponsorship is valued at around $8billion, and is predicted to more than double by the end of the decade. The audience is young, affluent and increasingly diverse, so it’s unsurprising that big brand names are seeking ways in to this world, via the publishers of mobile and big box console game titles such as League of Legends, Call of Duty or FIFA.\nGreat for brands, but what do gamers think of commercial messages gatecrashing their party?\nWe asked today’s guests, Ryan Snyder and David Wynn.\nDavid is Head of Solutions Consulting at Google Cloud for Games and Ryan is Head of Esports and Games at Nielsen Sports.\nTo help frame the conversation, we asked Ryan to commission a special Unofficial Partner research panel, using Nielsen’s Video Game Tracking survey, the premiere source for measuring consumer sentiment towards video game software on PC and console.\nListen to the podcast for analysis of this data and other questions facing the commercial side of esports."
  },
  {
    "objectID": "posts/things-left-unimplemented-dot-dot-dot-and-i-m-unsure-if-i-ever-will/index.html",
    "href": "posts/things-left-unimplemented-dot-dot-dot-and-i-m-unsure-if-i-ever-will/index.html",
    "title": "Things Left Unimplemented… and I’m Unsure if I Ever Will",
    "section": "",
    "text": "Having been around the PKM block a few times, I’ve gone snipe hunting once or twice in the PKM space. Here are some pitfalls I’ve found."
  },
  {
    "objectID": "posts/things-left-unimplemented-dot-dot-dot-and-i-m-unsure-if-i-ever-will/index.html#importing-readwise-into-basb",
    "href": "posts/things-left-unimplemented-dot-dot-dot-and-i-m-unsure-if-i-ever-will/index.html#importing-readwise-into-basb",
    "title": "Things Left Unimplemented… and I’m Unsure if I Ever Will",
    "section": "Importing Readwise Into BASB",
    "text": "Importing Readwise Into BASB\nIn the past, I’ve included importing Readwise comments in my implementations of BASB.\nIt was often a pain to set up, created a lot of name conflicts when searching (which might be valuable to some, but wasn’t to me), had occasional problems with unsupported characters, and generally just didn’t give me anything useful. With Logseq, I actually was running a separate instance of Obsidian because the Readwise plugin there worked and LogSeq’s didn’t. What a mess.\nIt did help when I was tinkering with a more formal Zettelkasten implementation, but beyond that… not so much.\nSpeaking of Zettelkasten…"
  },
  {
    "objectID": "posts/things-left-unimplemented-dot-dot-dot-and-i-m-unsure-if-i-ever-will/index.html#implementing-zettelkasten",
    "href": "posts/things-left-unimplemented-dot-dot-dot-and-i-m-unsure-if-i-ever-will/index.html#implementing-zettelkasten",
    "title": "Things Left Unimplemented… and I’m Unsure if I Ever Will",
    "section": "Implementing Zettelkasten",
    "text": "Implementing Zettelkasten\nI’ve alluded to this a few times, but I’ll be more explicit here.\nI’m very intrigued by the Zettelkasten community and approach. It feels like there are some good ideas in there.\nHowever, it also seems very clearly tailored for jobs where creating new, original knowledge is your goal and the thing that makes you successful… aka. Academia. For almost every other job in existence, remixing knowledge that already exists, or coming up with better implementations of current approaches, or just driving toward clarity instead of entropy are FAR better ways to spend your time and energy.\nThere is very real overhead in trying to make a Zettelkasten work. And to use it well, it gets more difficult to traverse through as it grows, by design. After all, if you’re trying to knock a bunch of these notes together to spur new ideas, that’s an exponentially growing number of collisions you’re aiming for. In creating novel knowledge, you want that. In a world with deadlines, that’s friction that just isn’t needed.\nSo, even though org-roam talks a big game about Zettelkasten, I find it much more useful as a general ID linker tool than that.\nThe one possible personal exception I might tinker with someday is a personal philosophical/religious Zettelkasten. That’s a pretty unique domain where thoughts from your own mind disproportionately matter, and connecting them together might yield meaning in and of itself. We’ll see if I ever get around to that."
  },
  {
    "objectID": "posts/vscode-as-md-editor/index.html",
    "href": "posts/vscode-as-md-editor/index.html",
    "title": "VSCode as an MD Editor",
    "section": "",
    "text": "So Kev made a post about how Typora was the missing UI link in his static site blogging journey.\nhttps://kevquirk.com/my-static-site-workflow/\nIt got me thinking… can’t VSCode do all that? Is that the linchpin I’ve been missing in my blogging workflow? Time to see if I can recreate his process and tweak it for myself!"
  },
  {
    "objectID": "posts/vscode-as-md-editor/index.html#replicating-success",
    "href": "posts/vscode-as-md-editor/index.html#replicating-success",
    "title": "VSCode as an MD Editor",
    "section": "Replicating Success",
    "text": "Replicating Success\n\nInserting links with a Keyboard Shortcut\nTo quote Kev’s steps:\n\nSearch for the post/page on my live site that I want to link to\nCopy the link to the post from the results\nHighlight the text I want to link to in Typora\nHit ⌘ + K\n\nAssuming search is the easy part (the fallback is just DuckDuckGo with a site: param), the pasting with auto-formatting is the key part.\nFor VSCode there’s a big extension that does this, and a small one. I installed the big one because it had more downloads. Looks good so far, even using the normal ctrl + v shortcut so I don’t have to think when pasting.\nI’ve found, even when just writing this post, this makes me much more generous with linking out to other sites when writing.\n\n\nPreviewing Posts\nThis one has two options in VSCode, but first, let’s recreate what’s working for Kev in Typora.\nVSCode allows you to style the built-in Markdown preview with either local css files or ones from any URL. I opted to make a new css file and add it to the repo so I could keep the local preview local.\nI discovered, like Kev did, it’s not really possible to entirely recreate the website (until I found something I’ll mention in a second), so some cherry picking was needed to recreate the style. Sadly, my site uses a bunch of scss, which the VSCode Markdown preview doesn’t support. So I went through my live website, inspecting the generated css rules and copying them into the new css file by hand. It only took a handful of stylings for body, p, code, h2, h3, and blockquote before I was basically there.\nBut then… I found something truly impressive. Something at the bottom of the Hugo Editors documentation that I wish I’d had for a while…\nhttps://frontmatter.codes/\nOh. Ooooohhh…..\nThat’s a whole CMS entirely implemented as an extension. It’s based on front matter (hence the name) and works with multiple static site generators. That’s… exactly what I’ve wanted but didn’t dare to hope for.\nIn addition to easy buttons to start the local server, it will display the whole, live website in a VSCode preview window instead of a basic css approximation.\nTo be fair, there is a downside. Namely, it doesn’t update as you type (only on save), and it remembers your scroll position rather than jumps to where the cursor is, but for all the extra CMS features (I can coherently keep draft posts in the repo now!), it seems like quite a bargain.\nYou can also still use the built-in preview window if you prefer. No need to commit to one or the other.\n\n\nDrag and Drop an Image to the a Target Folder\nI’m afraid I might be stumped on the drag and drop piece in attempting to be 1 for 1 with Typora. No one seems to have made an extension that brings an image file in to the current project by dragging it into the editor window. Everything seems to add a link to wherever the file already is, local or URL. In that sense, you’d have to go to his old method of putting the file in the correct folder first.\nYou can, however, open the media page in Front Matter and drag and drop it there. It’ll end up in the right folder, and you can even copy the relative URL from there. So it’s close… but not quite the same.\nPerhaps more interestingly, you can run a script on the image folder from Front Matter, potentially removing that optimization step through the context click entirely. The docs have an example for just that.\nBut rather than set that up, I found File Converter for doing context menu conversions which I installed with Chocolatey. If I find myself out and about away from my Windows machine, I don’t see a reason not to use CloudConvert on my Chromebook or Mac or otherwise in a pinch.\nFrankly, I don’t use a lot of images, and if I did I’d want to lean into object storage like Cloudflare’s R2 to serve them, which is not nearly so well integrated into VSCode. But that’s a project for another day. Maybe when I finally get around to that podcast I’ve been meaning to do and I don’t want 100’s of MBs of mp3 sitting in Github.\nThere’s probably a way to auto-optimize any images dropped into a folder, which then rsync’s to the bucket… but no! Another day!\n\n\nPublishing with a Single Command\nI use Cloudflare Pages to host this website, which is an awesome product. I was on Google Cloud Storage for a while (as the archive shows), but the http serving there is a bit of an afterthought. Pages has a lot of nice quality of life features around https (and CNAME flattening if you use their DNS as well) that you’d have to build yourself on GCP or AWS. It’s clear that small, static-style apps is Cloudflare Pages’ target… and it works beautifully.\nIn the case of my blog, it automatically pulls from the Github when I commit a post. So in VSCode I just push sync, and it’s done. Couldn’t be easier.\nPages also stores several deployments back, so if anything gets broken, I can revert to an old version easily while I dig in and fix it."
  },
  {
    "objectID": "posts/vscode-as-md-editor/index.html#free-extras-from-using-vscode",
    "href": "posts/vscode-as-md-editor/index.html#free-extras-from-using-vscode",
    "title": "VSCode as an MD Editor",
    "section": "Free Extras from Using VSCode",
    "text": "Free Extras from Using VSCode\n\nDeep Git Integration\nVSCode is a programmer’s editor, and naturally comes with all the git tools that you would expect tightly integrated into the GUI. Especially as I was selecting and tweaking my theme, I found it incredibly helpful to stage different files in different commits… because rolling back layout-breaking changes to my site shouldn’t require losing content commits as well.\n\n\nFind Across Files is Really Good\nI’m constantly looking for something in another file it seems, and VSCode is always there with just what I need. Never mind that it also makes search and replace with regex super easy, which I used to great effect recently when renaming some categories across all my posts.\n\n\nIt’s on All my Platforms\nI mentioned it earlier, but I routinely rotate between Windows, Mac, Linux, and Chromebook as I move around… and VSCode is there for me on every platform. Coupled with Git push and pull, I’ve got a local environment where I can push new content no matter where I am. It’s great to be that flexible."
  },
  {
    "objectID": "posts/vscode-as-md-editor/index.html#conclusion-its-viable",
    "href": "posts/vscode-as-md-editor/index.html#conclusion-its-viable",
    "title": "VSCode as an MD Editor",
    "section": "Conclusion: It’s Viable!",
    "text": "Conclusion: It’s Viable!\nI think the biggest weakness with the setup is the spell checking. It’s a touch hit or miss, missing some small words like “ot”. But overall, I’m more at home in a techy feeling editor anyway, and I hope Front Matter is enough to get Kev to reconsider his setup all over again. ;-)"
  },
  {
    "objectID": "posts/what-makes-org-mode-hard-for-pkm/index.html",
    "href": "posts/what-makes-org-mode-hard-for-pkm/index.html",
    "title": "What Makes Org Mode Hard for PKM",
    "section": "",
    "text": "Spoiler alert, it’s NOT the parentheses."
  },
  {
    "objectID": "posts/what-makes-org-mode-hard-for-pkm/index.html#why-basb-in-org-is-hard",
    "href": "posts/what-makes-org-mode-hard-for-pkm/index.html#why-basb-in-org-is-hard",
    "title": "What Makes Org Mode Hard for PKM",
    "section": "Why BASB in Org is Hard",
    "text": "Why BASB in Org is Hard\nThe big thing that makes Org Mode difficult for PKM is the same thing that makes it strong: it’s flexibility. In particular, the concept of a single note from BASB when translated to Org Mode is… unclear! You could have it be a single file. Or a single headline. Or only some headlines, which you could delineate by property or by tag or by file. And you could blend all these approaches at the same time!\nWhat choice! What decision fatigue!\nSo, what do you do? What principle do you organize around? Ease of filing? Ease of retrieval? Ease of iteration? Do you even need all these decisions to be made?"
  },
  {
    "objectID": "posts/what-makes-org-mode-hard-for-pkm/index.html#thinking-from-others",
    "href": "posts/what-makes-org-mode-hard-for-pkm/index.html#thinking-from-others",
    "title": "What Makes Org Mode Hard for PKM",
    "section": "Thinking From Others",
    "text": "Thinking From Others\nAs I was thinking about this, Nick Milo’s advice about Maps of Content kept ringing in my ears.\n\nA Map of Content has to earn its existence. You shouldn’t just make one because you think you should.\n\nThere are other classic quotes as well. Such as…\n\nA complex system that works is invariably found to have evolved from a simple system that worked. The inverse proposition also appears to be true: A complex system designed from scratch never works and cannot be made to work. You have to start over, beginning with a working simple system.\n\nJohn Gall\n\n\nI firmly believe in this in general, but especially for PKM. Most people who get into the discipline are too focused on the tools and not the real output the tools are supposed to enable. I remember looking at a Tana YouTube video on setting up a CRM. The video was a two hours long, and they hadn’t put a single entry into the system an hour in. ONLY structure.\nDave Winer found an analogous problem for naming things in software, because naming things is a big source of wasted energy and effort in software development. His solution is great: always go with the worst name. Translated to PKM: solve any problem with the dumbest, brute force-est, most built-in solution first. Then solve it “correctly” later, if you need to. This keeps your focus on producing the valuable stuff that deserves your time and energy, instead of tinkering with things that feel like you’re being productive, but in truth are a fancy form of procrastination. Plus the dumber solution, the less mental overhead it takes to make it work, which is good for maintenance."
  },
  {
    "objectID": "posts/what-makes-org-mode-hard-for-pkm/index.html#my-solution",
    "href": "posts/what-makes-org-mode-hard-for-pkm/index.html#my-solution",
    "title": "What Makes Org Mode Hard for PKM",
    "section": "My Solution",
    "text": "My Solution\nSo, with the permission to do dumb things first in mind, my suggestion to those thinking about Org mode is to start as simply as possible, which I interpret as starting with a single org file, and letting complexity earn itself as things develop.\nYou’ll see this idea, as well as several exceptions I’ve already made, as I detail the system."
  },
  {
    "objectID": "posts/you-are-not-your-lowest-point/index.html",
    "href": "posts/you-are-not-your-lowest-point/index.html",
    "title": "You Are Not Your Lowest Point",
    "section": "",
    "text": "You are not your lowest point.\nAt any time, you can choose to change the path you’re on. Even right this second if you wish.\nYou can’t change the past, but by the same token the past can’t dictate your next action. You do.\nMake it a good one."
  }
]