{"title":"CICD for Hugo: Speeding up the Static Site Flow","markdown":{"yaml":{"slug":"cicd-for-hugo-speeding-up-the-static-site-flow","aliases":["/articles/cicd-for-hugo-speeding-up-the-static-site-flow"],"date":"2017-11-25T14:24:52Z","title":"CICD for Hugo: Speeding up the Static Site Flow","categories":["Technology"]},"headingText":"Update","containsRefs":false,"markdown":"\n\nAs I was putting this site together, I realized there were some boilerplate workflows I wanted to improve.\n \n<!--more-->\n\nThe typical workflow for creating a post looked like this:\n\n1. Generate a markdown file \n2. Write content \n3. Commit to repo \n4. Build site \n5. rsync to Google Cloud Storage\n\nMy goal was to speed this up a bit, hopefully making room in the future for a more api driven posting approach. That said, I was willing to start small by cutting out a few of the end steps first.\n\nMy first instinct was to find some sort of repo-sync tool for Cloud Storage. I would still have to build and commit the compiled site to the repo, but that would at least cut out the rsync part. \n\nUnfortunately, according to the almighty Stack Overflow, there was no dice to be had on that front. You'd still need a go-between server to do the rsync'ing somehow.\n\n... But after thinking about it a bit, I realized Google Cloud Container Builder could serve exactly that function. It spins up, runs commands, and then spins down. All controlled through a single config file. Limited hassle, limited fuss.\n\nI dove through the [docs](https://cloud.google.com/container-builder/docs/concepts/overview) and it seemed straightforward enough. The source code gets auto-mounted to /workspace (which is the working directory as well). Each command is a docker container. And despite the name, you don't actually have to build a container at the end of it, so rsync'ing to a bucket is fair game.\n\nA little more searching led to a [tutorial](https://cloud.google.com/community/tutorials/automated-publishing-container-builder) that was just what I wanted... almost. That article just shows the rsync'ing part... but if Container Builder can already run commands, why should I rebuild the site on my machine before committing it?\n\nAll said, the new game plan looked like the following:\n\n1. Generate a markdown file \n2. Write content \n3. Commit to repo \n4. [Let Cloud Container Builder handle the rest]\n\nAs demonstrated in the [docs](https://cloud.google.com/container-builder/docs/concepts/overview), Google [provides a few cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders) out of the box, including gsutil... which is a big relief since I didn't want to mess with authentication. However, there's no pre-built binary for Hugo. To Docker Hub!\n\nSadly, there appears to be no official container for the Hugo project, and no one had an up to date container specifically for building the site (several wanted to build and serve). As a result I modified one of the Dockerfiles I found there, ending up with the following:\n\n    FROM debian:jessie\n    MAINTAINER remixer96@gmail.com\n\n    # Install pygments (for syntax highlighting) \n    RUN apt-get -qq update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -qq install -y --no-install-recommends python-pygments git ca-certificates asciidoc \\\n    && rm -rf /var/lib/apt/lists/*\n\n    # Download and install hugo\n    ENV HUGO_VERSION 0.31\n    ENV HUGO_BINARY hugo_${HUGO_VERSION}_Linux-64bit.deb\n\n\n    ADD https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/${HUGO_BINARY} /tmp/hugo.deb\n    RUN dpkg -i /tmp/hugo.deb \\\n    && rm /tmp/hugo.deb\n\nIt seemed a little too hacky to post back to docker hub, so instead I just used the internal docker registry in my Cloud Project.\n\nThis led to a pretty straightforward cloudbuild.yaml file:\n\n    steps:\n      - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n        args: [\"/usr/local/bin/hugo\"]\n      - name: gcr.io/cloud-builders/gsutil\n        args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]\n\nAnd it worked! Huzzah! All was well... until I tried to switch themes. Then I got a weird error message in the logs:\n\n    ERROR 2017/11/24 20:23:18 Error while rendering \"home\": template: index.html:1:3: executing \"index.html\" at <partial \"header\" .>: error calling partial: template: partials/header.html:4:3: executing \"partials/header.html\" at <partial \"head.html\" ...>: error calling partial: Partial \"head.html\" not found\n\nOn a closer look, I realized the new theme was being stored as a git binary in the repo, transparent where it needed to be on my machine but somehow not accessible on the build machine.\n\nAdding a git command to re-pull the theme in the builder seemed to fix it, leading to a final cloudbuil.yaml of:\n\n    steps:\n      - name: gcr.io/cloud-builders/git\n        args: ['clone', 'https://github.com/mtn/cocoa-eh-hugo-theme.git', 'themes/cocoa-eh']\n      - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n        args: [\"/usr/local/bin/hugo\"]\n      - name: gcr.io/cloud-builders/gsutil\n        args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]\n\nAside from adding a build trigger on every push to master, that's all there was to it. I was pretty surprised how easy it was all told, and there's a pretty generous allotment on the free tier for Cloud Builder, so I'm looking forward to tweaking it more in the future.\n\n\nI wasn't satisfied with the extra git pull in the cloudbuild.yaml, so in the course of other investigations I took a deeper look, which led to [this hugo issue](https://discourse.gohugo.io/t/adding-a-theme-as-a-submodule-or-clone/8789).\n\nTurns out there are three ways to pull a theme into your site:\n\n1. git clone\n2. git submodule\n3. git subtree\n\nAfter significant experimentation (and digging, because that 3rd option isn't easy to find), I found that subtrees are the right answer from a Cloud Builder perspective. All the articles about using subtrees are overkill (and tend to presume you want to commit to both repos), but a decent one [is here](https://developer.atlassian.com/blog/2015/05/the-power-of-git-subtree/). I didn't see a need to add the repo as a remote, just the *subtree add* command was fine for me.\n\nSo in the end, the cloudbuild.yaml is back to:\n\n    steps:\n      - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n        args: [\"/usr/local/bin/hugo\"]\n      - name: gcr.io/cloud-builders/gsutil\n        args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]","srcMarkdownNoYaml":"\n\nAs I was putting this site together, I realized there were some boilerplate workflows I wanted to improve.\n \n<!--more-->\n\nThe typical workflow for creating a post looked like this:\n\n1. Generate a markdown file \n2. Write content \n3. Commit to repo \n4. Build site \n5. rsync to Google Cloud Storage\n\nMy goal was to speed this up a bit, hopefully making room in the future for a more api driven posting approach. That said, I was willing to start small by cutting out a few of the end steps first.\n\nMy first instinct was to find some sort of repo-sync tool for Cloud Storage. I would still have to build and commit the compiled site to the repo, but that would at least cut out the rsync part. \n\nUnfortunately, according to the almighty Stack Overflow, there was no dice to be had on that front. You'd still need a go-between server to do the rsync'ing somehow.\n\n... But after thinking about it a bit, I realized Google Cloud Container Builder could serve exactly that function. It spins up, runs commands, and then spins down. All controlled through a single config file. Limited hassle, limited fuss.\n\nI dove through the [docs](https://cloud.google.com/container-builder/docs/concepts/overview) and it seemed straightforward enough. The source code gets auto-mounted to /workspace (which is the working directory as well). Each command is a docker container. And despite the name, you don't actually have to build a container at the end of it, so rsync'ing to a bucket is fair game.\n\nA little more searching led to a [tutorial](https://cloud.google.com/community/tutorials/automated-publishing-container-builder) that was just what I wanted... almost. That article just shows the rsync'ing part... but if Container Builder can already run commands, why should I rebuild the site on my machine before committing it?\n\nAll said, the new game plan looked like the following:\n\n1. Generate a markdown file \n2. Write content \n3. Commit to repo \n4. [Let Cloud Container Builder handle the rest]\n\nAs demonstrated in the [docs](https://cloud.google.com/container-builder/docs/concepts/overview), Google [provides a few cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders) out of the box, including gsutil... which is a big relief since I didn't want to mess with authentication. However, there's no pre-built binary for Hugo. To Docker Hub!\n\nSadly, there appears to be no official container for the Hugo project, and no one had an up to date container specifically for building the site (several wanted to build and serve). As a result I modified one of the Dockerfiles I found there, ending up with the following:\n\n    FROM debian:jessie\n    MAINTAINER remixer96@gmail.com\n\n    # Install pygments (for syntax highlighting) \n    RUN apt-get -qq update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -qq install -y --no-install-recommends python-pygments git ca-certificates asciidoc \\\n    && rm -rf /var/lib/apt/lists/*\n\n    # Download and install hugo\n    ENV HUGO_VERSION 0.31\n    ENV HUGO_BINARY hugo_${HUGO_VERSION}_Linux-64bit.deb\n\n\n    ADD https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/${HUGO_BINARY} /tmp/hugo.deb\n    RUN dpkg -i /tmp/hugo.deb \\\n    && rm /tmp/hugo.deb\n\nIt seemed a little too hacky to post back to docker hub, so instead I just used the internal docker registry in my Cloud Project.\n\nThis led to a pretty straightforward cloudbuild.yaml file:\n\n    steps:\n      - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n        args: [\"/usr/local/bin/hugo\"]\n      - name: gcr.io/cloud-builders/gsutil\n        args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]\n\nAnd it worked! Huzzah! All was well... until I tried to switch themes. Then I got a weird error message in the logs:\n\n    ERROR 2017/11/24 20:23:18 Error while rendering \"home\": template: index.html:1:3: executing \"index.html\" at <partial \"header\" .>: error calling partial: template: partials/header.html:4:3: executing \"partials/header.html\" at <partial \"head.html\" ...>: error calling partial: Partial \"head.html\" not found\n\nOn a closer look, I realized the new theme was being stored as a git binary in the repo, transparent where it needed to be on my machine but somehow not accessible on the build machine.\n\nAdding a git command to re-pull the theme in the builder seemed to fix it, leading to a final cloudbuil.yaml of:\n\n    steps:\n      - name: gcr.io/cloud-builders/git\n        args: ['clone', 'https://github.com/mtn/cocoa-eh-hugo-theme.git', 'themes/cocoa-eh']\n      - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n        args: [\"/usr/local/bin/hugo\"]\n      - name: gcr.io/cloud-builders/gsutil\n        args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]\n\nAside from adding a build trigger on every push to master, that's all there was to it. I was pretty surprised how easy it was all told, and there's a pretty generous allotment on the free tier for Cloud Builder, so I'm looking forward to tweaking it more in the future.\n\n## Update\n\nI wasn't satisfied with the extra git pull in the cloudbuild.yaml, so in the course of other investigations I took a deeper look, which led to [this hugo issue](https://discourse.gohugo.io/t/adding-a-theme-as-a-submodule-or-clone/8789).\n\nTurns out there are three ways to pull a theme into your site:\n\n1. git clone\n2. git submodule\n3. git subtree\n\nAfter significant experimentation (and digging, because that 3rd option isn't easy to find), I found that subtrees are the right answer from a Cloud Builder perspective. All the articles about using subtrees are overkill (and tend to presume you want to commit to both repos), but a decent one [is here](https://developer.atlassian.com/blog/2015/05/the-power-of-git-subtree/). I didn't see a need to add the repo as a remote, just the *subtree add* command was fine for me.\n\nSo in the end, the cloudbuild.yaml is back to:\n\n    steps:\n      - name: us.gcr.io/ftwynn-hugo-blog/hugo-builder:v1\n        args: [\"/usr/local/bin/hugo\"]\n      - name: gcr.io/cloud-builders/gsutil\n        args: [\"-m\", \"rsync\", \"-r\", \"-c\", \"-d\", \"./public\", \"gs://www.ftwynn.com\"]"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.554","theme":["darkly","../../custom.scss"],"title-block-banner":true,"slug":"cicd-for-hugo-speeding-up-the-static-site-flow","aliases":["/articles/cicd-for-hugo-speeding-up-the-static-site-flow"],"date":"2017-11-25T14:24:52Z","title":"CICD for Hugo: Speeding up the Static Site Flow","categories":["Technology"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}